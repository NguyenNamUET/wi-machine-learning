/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./dataset-selection/newstyle.less":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./dataset-selection/newstyle.less ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \".dragging {\\n  background: #fff !important;\\n  border-radius: 10px !important;\\n  border: 2px dotted #0674da !important;\\n  width: 200px;\\n  padding: 15px 20px;\\n  transition: padding ease-in 0.3s;\\n}\\n.dragging wi-droppable .drag-over {\\n  transition: all 0.2s ease-in;\\n  filter: unset !important;\\n  background-color: rgba(255, 255, 255, 0.5);\\n}\\n.dragging wi-tree-node-virtual {\\n  width: 100%;\\n}\\n.dragging wi-tree-node-virtual > div {\\n  cursor: default;\\n  padding-left: 0 !important;\\n}\\n.dragging wi-tree-node-virtual .node-icon {\\n  display: flex;\\n  padding-right: 10px;\\n  font-size: 13px;\\n  filter: saturate(2);\\n}\\n.dragging wi-tree-node-virtual .node-label {\\n  padding-right: 10px;\\n  font-size: 13px;\\n  display: inline-block;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n.dragging wi-tree-node-virtual .node-caret {\\n  display: none;\\n}\\n.dragging wi-tree-node-virtual .invisible {\\n  visibility: hidden;\\n}\\n.dragging wi-tree-node-virtual .node-content {\\n  border-bottom: 1px solid #fff;\\n  position: relative;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  display: flex;\\n  align-items: center;\\n  transition-property: padding, margin;\\n  transition-duration: 0.2s;\\n  height: 37px;\\n}\\n.dragging wi-tree-node-virtual .node-content,\\n.dragging wi-tree-node-virtual .node-content::after {\\n  height: 37px;\\n}\\n.dragging wi-tree-node-virtual .node-content.search-mode {\\n  color: #fff;\\n}\\n.dragging wi-tree-node-virtual .node-content.search-mode.not-matched.not-show {\\n  display: none;\\n}\\n.dragging wi-tree-node-virtual .node-content.search-mode.not-matched > div {\\n  opacity: 1;\\n}\\n.dragging wi-tree-node-virtual .node-content.selected {\\n  background: #fff;\\n}\\n.dragging wi-tree-node-virtual .node-content.selected::after {\\n  background-color: #fff;\\n}\\n.dragging wi-tree-node-virtual .node-content::after {\\n  content: \\\"2r\\\";\\n  color: transparent;\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  width: 4px;\\n}\\n.dragging wi-tree-node-virtual .node-content::after {\\n  right: 0;\\n}\\n.dragging wi-tree-node-virtual .node-content:hover {\\n  background: #fff;\\n}\\n.header {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.title {\\n  font-size: 14px;\\n  font-weight: bold;\\n  color: #000;\\n  margin-bottom: 10px;\\n  margin-right: 30px;\\n  display: flex;\\n  align-items: center;\\n}\\n.sticky {\\n  background: #EDEFF3;\\n  padding-bottom: 20px;\\n  position: sticky;\\n  top: 0;\\n}\\n.sub {\\n  color: #8793A1;\\n  font-size: 12px;\\n}\\ndataset-selection .main-content {\\n  display: flex;\\n  height: 100%;\\n  font-family: 'Roboto', sans-serif !important;\\n  font-size: 12px;\\n  background: #EDEFF3;\\n}\\ndataset-selection .main-content .header {\\n  display: flex;\\n  flex-direction: column;\\n}\\ndataset-selection .main-content .title {\\n  font-size: 14px;\\n  font-weight: bold;\\n  color: #000;\\n  margin-bottom: 10px;\\n  margin-right: 30px;\\n  display: flex;\\n  align-items: center;\\n}\\ndataset-selection .main-content .sticky {\\n  background: #EDEFF3;\\n  padding-bottom: 20px;\\n  position: sticky;\\n  top: 0;\\n}\\ndataset-selection .main-content .sub {\\n  color: #8793A1;\\n  font-size: 12px;\\n}\\ndataset-selection .main-content .input-selection {\\n  flex-basis: 315px;\\n  display: flex;\\n  flex-direction: column;\\n  background: #fff;\\n  padding: 20px;\\n}\\ndataset-selection .main-content .input-selection .button-input {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr 1fr;\\n  grid-gap: 10px;\\n  margin-top: 20px;\\n}\\ndataset-selection .main-content .input-selection .button-input .button {\\n  background: #EDEFF3;\\n  padding: 15px;\\n  border-radius: 2px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n  transition: all ease-in 0.2s;\\n}\\ndataset-selection .main-content .input-selection .button-input .button.active {\\n  background: #0674da;\\n  color: #fff;\\n  transition: all ease-in 0.3s;\\n}\\ndataset-selection .main-content .input-selection .button-input .button.active > div {\\n  filter: saturate(0.5) brightness(6);\\n}\\ndataset-selection .main-content .input-selection .button-input .button:active {\\n  transform: scale(0.7);\\n  transition: all ease-in 0.2s;\\n}\\ndataset-selection .main-content .input-selection .button-input .button:hover {\\n  filter: saturate(1.5);\\n}\\ndataset-selection .main-content .input-selection .list-input {\\n  margin-top: 20px;\\n  flex: 1;\\n  display: flex;\\n  overflow: hidden;\\n  position: relative;\\n}\\ndataset-selection .main-content .input-selection .list-input .list-scroll {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  margin: 0 auto;\\n  bottom: 0;\\n  left: 0;\\n}\\ndataset-selection .main-content .input-selection .list-input .list-scroll .input-curve {\\n  margin-bottom: 15px;\\n  padding-bottom: 15px;\\n  display: flex;\\n  border-bottom: 1px solid #efefef;\\n}\\ndataset-selection .main-content .no-datasets {\\n  height: 100%;\\n  width: 100%;\\n  border-radius: 5px;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  color: #c7ccd2;\\n  background-repeat: repeat-y;\\n  background-size: 100% 100px;\\n  opacity: 0.5;\\n}\\ndataset-selection .main-content .workspace {\\n  flex: 1;\\n  display: flex;\\n  padding: 20px;\\n  height: calc(100vh - 60px);\\n}\\ndataset-selection .main-content .workspace .tab {\\n  display: flex;\\n}\\ndataset-selection .main-content .workspace .tab .tab-name {\\n  user-select: none;\\n  cursor: pointer;\\n  opacity: 0.3;\\n  padding: 0px 20px 15px 20px;\\n  border-bottom: 2px solid #F5F9FC;\\n  transition: all ease-in 0.2s;\\n}\\ndataset-selection .main-content .workspace .tab .tab-name.active {\\n  opacity: 1;\\n  border-bottom: 2px solid #0674da;\\n  transition: all ease-in 0.2s;\\n}\\ndataset-selection .main-content .workspace .datasets-info {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 20px;\\n  background: #fff;\\n  margin-bottom: 20px;\\n  position: relative;\\n  border-radius: 2px;\\n}\\ndataset-selection .main-content .workspace .datasets-info .button {\\n  top: 15px;\\n  right: 15px;\\n  font-size: 8px;\\n  cursor: pointer;\\n  position: absolute;\\n}\\ndataset-selection .main-content .workspace .datasets-info .detail {\\n  display: flex;\\n  color: #ccc;\\n}\\ndataset-selection .main-content .workspace .datasets-info .detail > div {\\n  margin-right: 10px;\\n}\\ndataset-selection .slim-scroller ::-webkit-scrollbar {\\n  background: transparent !important;\\n  width: 5px !important;\\n  height: 5px !important;\\n}\\ndataset-selection .slim-scroller ::-webkit-scrollbar-thumb {\\n  background-color: #dcdcdc !important;\\n}\\ndataset-selection .form-control {\\n  box-shadow: none;\\n  font-size: 12px;\\n  border-radius: 2px;\\n  border: none;\\n  height: 20px;\\n  padding: 0;\\n}\\ndataset-selection .form-control:focus {\\n  border-color: #fff;\\n  outline: none;\\n  box-shadow: none;\\n}\\ndataset-selection .btn {\\n  border-radius: 2px;\\n  padding: 0;\\n  box-shadow: none;\\n}\\ndataset-selection .btn-default {\\n  color: #333;\\n  background-color: unset;\\n  border-color: unset;\\n  border: none;\\n  font-size: 12px;\\n  color: #8793A1;\\n  background: #fff;\\n}\\ndataset-selection .btn-default.focus,\\ndataset-selection .btn-default:focus {\\n  color: #333;\\n  background-color: #ffffff;\\n  box-shadow: none;\\n}\\ndataset-selection .btn-default:hover {\\n  background-color: #ffffff;\\n  border-color: #0674da;\\n  transition: all ease-in 0.3s;\\n  box-shadow: none;\\n}\\ndataset-selection .btn-default.active,\\ndataset-selection .btn-default:active,\\ndataset-selection .open > .dropdown-toggle.btn-default {\\n  background-color: #ffffff;\\n  border-color: #fff;\\n  box-shadow: none;\\n  border-radius: 2px;\\n}\\ndataset-selection .btn-default-focus {\\n  box-shadow: none;\\n  outline: none;\\n  border-radius: 2px;\\n  background: #fff;\\n}\\ndataset-selection .dropdown-menu {\\n  box-shadow: none;\\n  border-radius: 0;\\n  padding: 0;\\n  font-size: 12px;\\n}\\ndataset-selection .ui-select-bootstrap > .ui-select-choices,\\ndataset-selection .ui-select-bootstrap > .ui-select-no-choice {\\n  max-height: 500px;\\n  margin-top: 4px;\\n}\\ndataset-selection .ui-select-bootstrap .ui-select-choices-row > span {\\n  padding: 7px 20px;\\n  border-bottom: 1px solid #fff;\\n}\\ndataset-selection .ui-select-bootstrap .ui-select-choices-row.active > span {\\n  color: #fff;\\n  text-decoration: none;\\n  outline: 0;\\n  background-color: #0674da;\\n}\\ndataset-selection wi-tree-node-virtual > div {\\n  padding-left: 10px;\\n}\\ndataset-selection wi-tree-node-virtual .node-content,\\ndataset-selection wi-tree-node-virtual .node-content::after {\\n  line-height: unset;\\n  padding: 7px 15px 7px 7px;\\n  background: #fff;\\n  border-bottom: unset;\\n  transition: all ease-in 0.1s;\\n  border-radius: 2px;\\n  user-select: none;\\n}\\ndataset-selection wi-tree-node-virtual .node-content.selected::after {\\n  background: none;\\n}\\ndataset-selection wi-tree-node-virtual .node-label {\\n  font-size: 12px;\\n  padding: 0 10px;\\n}\\ndataset-selection wi-tree-node-virtual .node-caret {\\n  width: 18px;\\n}\\ndataset-selection wi-tree-node-virtual .node-icon {\\n  filter: saturate(2);\\n}\\ndataset-selection wi-tree-node-virtual .node-content:hover {\\n  background: #f6f8fa;\\n  transition: all ease-in 0.1s;\\n}\\ndataset-selection wi-tree-node-virtual .node-content.selected {\\n  background: #f6f8fa;\\n  border-radius: 2px;\\n  transition: all ease-in 0.1s;\\n}\\ndataset-selection wi-tree-node-virtual .node-content::after {\\n  content: unset;\\n  color: transparent;\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  width: 4px;\\n}\\ndataset-selection wi-tree-view-virtual div input {\\n  max-width: calc(100% - 40px);\\n  line-height: unset;\\n  padding: 11px 20px;\\n  margin: 20px;\\n  border-bottom: 1px solid #e4ecfa;\\n  border-radius: 0;\\n  color: #353535;\\n  background: #EDEFF3;\\n}\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./dataset-selection/newstyle.less?../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./machine-tabs/newstyle.less":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./machine-tabs/newstyle.less ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"body {\\n  width: 100vw;\\n  height: 100vh;\\n}\\n.slim-scroller ::-webkit-scrollbar {\\n  background: transparent !important;\\n  width: 5px !important;\\n  height: 5px !important;\\n}\\n.slim-scroller ::-webkit-scrollbar-thumb {\\n  background-color: #dcdcdc !important;\\n}\\n@keyframes show-dialog {\\n  0% {\\n    transform: scale(0);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n@keyframes show-toast {\\n  0% {\\n    transform: translateY(-50%);\\n  }\\n  100% {\\n    transform: translateY(0);\\n  }\\n}\\n.toast-top-right {\\n  top: 72px !important;\\n}\\n#toast-container > div {\\n  padding: 15px 15px 15px 69px !important;\\n  width: 400px !important;\\n  margin: 0 0 12px !important;\\n  background-position: 25px center !important;\\n  box-shadow: 0 0 12px #00000026 !important;\\n  opacity: 0.8 !important;\\n  backdrop-filter: blur(7px);\\n}\\n.toast {\\n  animation: show-toast 1s ease;\\n}\\nwi-login > div {\\n  position: absolute;\\n  z-index: 4;\\n  right: 0;\\n  top: 0;\\n  width: 100%;\\n  padding: 18px;\\n  justify-content: space-between;\\n  display: flex;\\n  align-items: center;\\n}\\nwi-login > div > span {\\n  border: none;\\n  color: #0674da6b;\\n  background: none;\\n}\\nwi-login > div > div.online {\\n  direction: rtl;\\n  color: #0674da;\\n}\\nwi-login > div > div span.icon {\\n  padding-left: 0;\\n  padding-right: 15px;\\n}\\n.body-dialog-ml {\\n  font-size: 12px;\\n  padding: 0 20px;\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  width: 400px;\\n  background: white;\\n  z-index: 100000;\\n  box-shadow: 0 39px 37px 18px #0000000d;\\n  border-radius: 2px;\\n  animation: show-dialog 0.3s ease;\\n}\\n.body-dialog-ml .header-dl-ml {\\n  flex-basis: 80px;\\n  position: relative;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  border-bottom: 1px solid #efefef;\\n}\\n.body-dialog-ml .header-dl-ml .confirm {\\n  width: 100%;\\n  display: flex;\\n  padding: 13px;\\n  justify-content: space-between;\\n  align-items: center;\\n  background: #ec7363;\\n  color: #fff;\\n  top: 20px;\\n  line-height: 1;\\n  border-radius: 2px;\\n  position: absolute;\\n  box-shadow: 0 10px 10px #0000001a;\\n  animation: show-toast 0.5s ease;\\n}\\n.body-dialog-ml .header-dl-ml .header-dl-ml-title {\\n  font-weight: bold;\\n}\\n.body-dialog-ml .header-dl-ml .search-project {\\n  border-radius: 2px;\\n  border: 1px solid #e8e8e8;\\n  margin-right: 20px;\\n  width: 100%;\\n  line-height: 1;\\n  font-size: 12px;\\n  padding: 10px;\\n}\\n.body-dialog-ml .header-dl-ml .new-project {\\n  color: #0674da;\\n  padding: 10px;\\n  border: 1px solid #0674da;\\n  border-radius: 2px;\\n  cursor: pointer;\\n}\\n.body-dialog-ml .main-dl-ml {\\n  flex-basis: 220px;\\n  overflow: auto;\\n  margin: 10px 0;\\n}\\n.body-dialog-ml .main-dl-ml .item-list-of-dl {\\n  background: #eaeaea;\\n  border-radius: 2px;\\n  padding: 10px 10px;\\n  margin: 10px 0;\\n  font-size: 12px;\\n  user-select: none;\\n  border: 1px solid #eaeaea;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n.body-dialog-ml .main-dl-ml .item-list-of-dl > div {\\n  cursor: pointer;\\n}\\n.body-dialog-ml .main-dl-ml .item-list-of-dl > div:hover {\\n  color: #2565f9 !important;\\n}\\n.body-dialog-ml .main-dl-ml .item-list-of-dl:hover {\\n  background: #c9cace;\\n}\\n.body-dialog-ml .main-dl-ml .selectedProject {\\n  border: 1px solid #0674da;\\n  background: #0674da !important;\\n  color: #fff;\\n}\\n.body-dialog-ml .main-dl-ml .selectedProject > div {\\n  color: #ccc !important;\\n}\\n.body-dialog-ml .main-dl-ml .selectedProject > div:hover {\\n  color: #fff !important;\\n}\\n.body-dialog-ml .footer-dl-ml {\\n  flex-basis: 80px;\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  border-top: 1px solid #efefef;\\n}\\n.body-dialog-ml .footer-dl-ml .footer-dl-ml-btn {\\n  background: #e6e7ea;\\n  color: #616161;\\n  transition: all 0.2s ease-in;\\n  margin-left: 20px;\\n  padding: 11px 18px;\\n  display: flex;\\n  align-items: center;\\n  line-height: 1;\\n  height: 36px;\\n  font-size: 12px;\\n  border-radius: 2px;\\n  letter-spacing: 2px;\\n  cursor: pointer;\\n}\\n.body-dialog-ml .footer-dl-ml .active {\\n  background: #0674da;\\n  color: #fff;\\n}\\nmachine-tabs {\\n  display: flex;\\n  flex: 1;\\n  height: 100%;\\n  overflow: hidden;\\n}\\nmachine-tabs .menu {\\n  font-family: Roboto, system-ui, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  background: #0674da;\\n  text-transform: uppercase;\\n  letter-spacing: 0.5px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 60px;\\n  font-size: 12px;\\n  font-weight: bold;\\n}\\nmachine-tabs .menu .menu-item {\\n  color: #fff;\\n  opacity: 0.3;\\n  height: 100%;\\n  display: flex;\\n  align-items: center;\\n  padding: 0 15px;\\n  cursor: pointer;\\n  transition: all ease-in 0.3s;\\n}\\nmachine-tabs .menu .menu-item:hover {\\n  opacity: 1;\\n  transition: all ease-in 0.3s;\\n}\\nmachine-tabs .menu .ml-project-name {\\n  color: #ffffff;\\n  padding: 5px 10px;\\n  margin-right: 20px;\\n  border-radius: 2px;\\n}\\nmachine-tabs .menu .active {\\n  opacity: 1;\\n}\\nmachine-tabs .main {\\n  flex: 1;\\n  background: #F7F9FD;\\n  height: calc(100% - 60px);\\n  position: relative;\\n}\\nmachine-tabs .main .user-setting {\\n  position: absolute;\\n  display: flex;\\n  padding: 20px;\\n  flex-direction: column;\\n  height: 100%;\\n  width: 315px;\\n  z-index: 5;\\n  background: #fff;\\n  right: -315px;\\n  transition: all ease-in 0.3s;\\n}\\nmachine-tabs .main .user-setting .login {\\n  position: absolute;\\n  bottom: 20px;\\n  width: calc(100% - 40px);\\n  height: 60px;\\n  background: #0674da1c;\\n  border: 1px solid #0674da6e;\\n  border-radius: 2px;\\n}\\nmachine-tabs .main .user-setting .setting {\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 20px;\\n}\\nmachine-tabs .main .user-setting .setting .color {\\n  border-radius: 2px;\\n  border: 1px solid #ccc;\\n}\\nmachine-tabs .main .user-setting .font-size {\\n  margin-top: 30px;\\n  height: 2px;\\n  background: #dedede;\\n  position: relative;\\n  align-items: center;\\n  display: flex;\\n  justify-content: space-between;\\n}\\nmachine-tabs .main .user-setting .font-size > div {\\n  background: #d4d4d4;\\n  width: 10px;\\n  border-radius: 50%;\\n  cursor: pointer;\\n  height: 10px;\\n  border: 1px solid #ccc;\\n  transition: all ease-in 0.3s;\\n}\\nmachine-tabs .main .user-setting .font-size .choose-font-size {\\n  background: #0674da;\\n  border: 1px solid #0674da;\\n  transform: scale(1.5);\\n  transition: all ease-in 0.3s;\\n}\\nmachine-tabs .main .show-user-setting {\\n  right: 0;\\n  transition: all ease-in 0.3s;\\n}\\nmachine-tabs .main .next {\\n  position: absolute;\\n  height: 100%;\\n  width: 3px;\\n  z-index: 1;\\n  right: 0;\\n  cursor: pointer;\\n}\\nmachine-tabs .main .next > span {\\n  left: 120px;\\n  width: 50px;\\n  height: 100px;\\n  background: #0674da;\\n  border-top-left-radius: 100px;\\n  border-bottom-left-radius: 100px;\\n  color: #fff;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 20px;\\n  position: absolute;\\n  top: 50%;\\n  transform: translate(0, -50%);\\n  transition: all ease-in 0.2s;\\n}\\nmachine-tabs .main .next > span::before {\\n  position: absolute;\\n  top: 50%;\\n  transform: translate(90%, -50%);\\n}\\nmachine-tabs .main .next:hover > span {\\n  left: -47px;\\n  transition: all ease-in 0.2s;\\n}\\nmachine-tabs .main .back {\\n  position: absolute;\\n  height: 100%;\\n  width: 3px;\\n  z-index: 1;\\n  cursor: pointer;\\n}\\nmachine-tabs .main .back > span {\\n  left: -120px;\\n  width: 50px;\\n  height: 100px;\\n  background: #0674da;\\n  border-top-right-radius: 100px;\\n  border-bottom-right-radius: 100px;\\n  color: #fff;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 20px;\\n  position: absolute;\\n  top: 50%;\\n  transform: translate(0, -50%);\\n  transition: all ease-in 0.2s;\\n}\\nmachine-tabs .main .back > span::before {\\n  position: absolute;\\n  top: 50%;\\n  transform: translate(65%, -50%);\\n}\\nmachine-tabs .main .back:hover > span {\\n  left: 0;\\n  transition: all ease-in 0.2s;\\n}\\nmachine-tabs .neural-network-main {\\n  height: 100%;\\n  width: calc(100% - 315px);\\n  right: 0;\\n  position: absolute;\\n}\\nmachine-tabs .form-control {\\n  box-shadow: none;\\n  font-size: 12px;\\n  border-radius: 2px;\\n  border: none;\\n  height: 20px;\\n  padding: 0;\\n}\\nmachine-tabs .form-control:focus {\\n  border-color: #fff;\\n  outline: none;\\n  box-shadow: none;\\n}\\nmachine-tabs .btn {\\n  border-radius: 2px;\\n  padding: 0;\\n  box-shadow: none;\\n}\\nmachine-tabs .btn-default {\\n  color: #333;\\n  background-color: unset;\\n  border-color: unset;\\n  border: none;\\n  font-size: 12px;\\n  color: #8793A1;\\n  background: #fff;\\n}\\nmachine-tabs .btn-default.focus,\\nmachine-tabs .btn-default:focus {\\n  color: #333;\\n  background-color: #ffffff;\\n  box-shadow: none;\\n}\\nmachine-tabs .btn-default:hover {\\n  background-color: #ffffff;\\n  border-color: #0674da;\\n  transition: all ease-in 0.3s;\\n  box-shadow: none;\\n}\\nmachine-tabs .btn-default.active,\\nmachine-tabs .btn-default:active,\\nmachine-tabs .open > .dropdown-toggle.btn-default {\\n  background-color: #ffffff;\\n  border-color: #fff;\\n  box-shadow: none;\\n  border-radius: 2px;\\n}\\nmachine-tabs .btn-default-focus {\\n  box-shadow: none;\\n  outline: none;\\n  border-radius: 2px;\\n  background: #fff;\\n}\\nmachine-tabs .dropdown-menu {\\n  box-shadow: none;\\n  border-radius: 0;\\n  padding: 0;\\n  font-size: 12px;\\n}\\nmachine-tabs .ui-select-bootstrap > .ui-select-choices,\\nmachine-tabs .ui-select-bootstrap > .ui-select-no-choice {\\n  max-height: 500px;\\n  margin-top: 4px;\\n}\\nmachine-tabs .ui-select-bootstrap .ui-select-choices-row > span {\\n  padding: 7px 20px;\\n  border-bottom: 1px solid #fff;\\n}\\nmachine-tabs .ui-select-bootstrap .ui-select-choices-row.active > span {\\n  color: #fff;\\n  text-decoration: none;\\n  outline: 0;\\n  background-color: #0674da;\\n}\\n.ngdialog .btn {\\n  padding: 9px;\\n  text-align: center;\\n}\\n.newDialog {\\n  padding: 5px 13px 0 13px;\\n  font-size: 15px;\\n  font-weight: bold;\\n}\\n.newDialog > div {\\n  margin-bottom: 15px;\\n}\\n.newDialog .searchInput {\\n  text-align: left;\\n  color: #0074c5;\\n  background-color: #ffffff;\\n  border: 1px solid #cecece;\\n  border-radius: 70px;\\n  font-size: 12px;\\n  font-weight: bold;\\n  padding: 8px 13px;\\n  width: auto;\\n  transition: border 0.5s;\\n}\\n.newDialog .newDialogContent > form {\\n  display: flex;\\n}\\n.newDialog .newDialogContent .list-project {\\n  margin: 0;\\n  list-style-type: none;\\n  padding: 0;\\n  text-align: left;\\n  display: flex;\\n  width: 100%;\\n  flex-direction: column;\\n}\\n.newDialog .newDialogContent .list-project > li {\\n  padding: 4px 13px;\\n  border-radius: 3px;\\n  background: #dcdcdc80;\\n  border: 1px solid #f4f4f4;\\n  margin: 0 0 8px 0;\\n  font-size: 12px;\\n  cursor: pointer;\\n  transition: border 0.5s;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.newDialog .newDialogContent .list-project > li .del {\\n  color: #d2d2d2;\\n}\\n.newDialog .newDialogContent .list-project > li .del:hover {\\n  color: #ca7878;\\n}\\n.newDialog .newDialogContent .list-project > li.selectedProject {\\n  border: 1px solid #0077be;\\n  color: #0077be;\\n}\\n.newDialog .newDialogContent .list-project > li:hover {\\n  border: 1px solid #0077be;\\n  transition: border 0.5s;\\n}\\n.ngdialog.ngdialog-theme-default .ngdialog-button {\\n  padding: 11px 18px !important;\\n  border: 1px solid;\\n}\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./machine-tabs/newstyle.less?../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./model-selection/newstyle.less":
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./model-selection/newstyle.less ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \".position-static {\\n  position: static;\\n}\\nmodel-selection {\\n  position: absolute;\\n}\\nmodel-selection .hide {\\n  display: none;\\n}\\nmodel-selection .main-content {\\n  display: flex;\\n  height: calc(100vh - 60px);\\n  font-family: 'Roboto', sans-serif !important;\\n  font-size: 12px;\\n  background: #EDEFF3;\\n}\\nmodel-selection .main-content .header {\\n  display: flex;\\n  flex-direction: column;\\n  margin-bottom: 20px;\\n}\\nmodel-selection .main-content .title {\\n  font-size: 14px;\\n  font-weight: bold;\\n  color: #000;\\n  margin-bottom: 10px;\\n  margin-right: 30px;\\n  display: flex;\\n}\\nmodel-selection .main-content .sub {\\n  color: #8793A1;\\n  font-size: 12px;\\n}\\nmodel-selection .main-content .input-selection {\\n  width: 315px;\\n  display: flex;\\n  flex-direction: column;\\n  background: #ffffff;\\n  position: relative;\\n  box-shadow: 10px 0 20px #0000000a;\\n}\\nmodel-selection .main-content .hidden-layers {\\n  display: flex;\\n  align-items: center;\\n  border-radius: 2px;\\n  margin-bottom: 20px;\\n  background: #0674da;\\n  justify-content: space-between;\\n  color: #fff;\\n}\\nmodel-selection .main-content .hidden-layers .inputs {\\n  font-weight: bold;\\n  margin: 0 20px;\\n  text-align: center;\\n  background: transparent;\\n  color: #fff;\\n}\\nmodel-selection .main-content .hidden-layers .add,\\nmodel-selection .main-content .hidden-layers .remove {\\n  padding: 15px;\\n  cursor: pointer;\\n  border-radius: 2px;\\n  transition: all ease-in 0.1s;\\n}\\nmodel-selection .main-content .hidden-layers .add:active,\\nmodel-selection .main-content .hidden-layers .remove:active {\\n  background: #4d70c3 !important;\\n  transition: all ease-in 0.1s;\\n}\\nmodel-selection .main-content .hidden-layers .add:hover,\\nmodel-selection .main-content .hidden-layers .remove:hover {\\n  transition: all ease-in 0.1s;\\n  background: #6e9aff;\\n}\\nmodel-selection .main-content .input-number {\\n  display: flex;\\n  align-items: center;\\n  border-radius: 2px;\\n  margin-bottom: 20px;\\n  padding-left: 10px;\\n  background: #fff;\\n  justify-content: space-between;\\n  border: 1px solid #edeff3;\\n}\\nmodel-selection .main-content .input-number .name {\\n  font-weight: bold;\\n  white-space: nowrap;\\n  margin-right: 10px;\\n}\\nmodel-selection .main-content .input-number .add,\\nmodel-selection .main-content .input-number .remove {\\n  padding: 14px;\\n  cursor: pointer;\\n  transition: all ease-in 0.1s;\\n}\\nmodel-selection .main-content .input-number .add:active,\\nmodel-selection .main-content .input-number .remove:active {\\n  transform: scale(0.8);\\n  transition: all ease-in 0.1s;\\n}\\nmodel-selection .main-content .input-number .add:hover,\\nmodel-selection .main-content .input-number .remove:hover {\\n  transition: all ease-in 0.1s;\\n  background: #e0e0e2;\\n}\\nmodel-selection .main-content .workspace {\\n  flex: 1;\\n  display: flex;\\n}\\nmodel-selection .main-content .button-neural {\\n  position: absolute;\\n  bottom: 0;\\n  margin: 20px;\\n  display: flex;\\n  justify-content: center;\\n  border-radius: 2px;\\n  width: -webkit-fill-available;\\n  padding: 10px;\\n  background: #0674da;\\n  text-transform: uppercase;\\n  color: #fff;\\n  cursor: pointer;\\n  transition: all ease-in 0.2s;\\n}\\nmodel-selection .main-content .button-neural:hover {\\n  background: #5e8dfa;\\n  transition: all ease-in 0.2s;\\n}\\nmodel-selection .main-content .tab {\\n  display: flex;\\n  background: #fff;\\n}\\nmodel-selection .main-content .tab .tab-button {\\n  flex: 1;\\n  display: flex;\\n  justify-content: center;\\n  border-bottom: 2px solid #edeff3;\\n  padding: 15px 30px;\\n  color: #A5ACB4;\\n  cursor: pointer;\\n}\\nmodel-selection .main-content .tab .tab-button:hover {\\n  filter: invert(0.1);\\n  transition: all ease-in 0.2s;\\n}\\nmodel-selection .main-content .tab .active {\\n  color: #0674da;\\n  border-bottom: 2px solid #0674da;\\n  transition: all ease-in 0.2s;\\n}\\nmodel-selection .dropdown-list {\\n  user-select: none;\\n  overflow: visible;\\n  position: absolute;\\n  z-index: 1;\\n  left: -29px;\\n  border-radius: 2px;\\n  margin-top: 15px;\\n  padding: 15px 0;\\n  min-width: 150px;\\n  box-shadow: 0 0px 25px 0 #0000001c;\\n  background: #fff;\\n}\\nmodel-selection .dropdown-list > div > div {\\n  padding: 10px 20px;\\n  cursor: pointer;\\n}\\nmodel-selection .dropdown-list-caret {\\n  position: absolute;\\n  left: 64px;\\n  top: -20px;\\n  z-index: 8;\\n  border: 10px solid transparent;\\n  border-bottom-color: #fff;\\n}\\nmodel-selection .slim-scroller ::-webkit-scrollbar {\\n  background: transparent !important;\\n  width: 5px !important;\\n  height: 5px !important;\\n}\\nmodel-selection .slim-scroller ::-webkit-scrollbar-thumb {\\n  background-color: #dcdcdc !important;\\n}\\nmodel-selection editable {\\n  display: flex;\\n  border-bottom: 1px solid #dadada;\\n}\\nmodel-selection editable label {\\n  padding: 10px 0;\\n  flex: 1;\\n  float: left;\\n  margin-right: 0;\\n  margin-bottom: 0;\\n}\\nmodel-selection editable div.my-content {\\n  flex: 1;\\n  direction: rtl;\\n  padding: 10px 0;\\n  overflow: hidden;\\n}\\nmodel-selection editable div.my-content > div {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\nmodel-selection .form-control {\\n  box-shadow: none;\\n  font-size: 12px;\\n  border-radius: 2px;\\n  border: none;\\n  height: 20px;\\n  padding: 0;\\n}\\nmodel-selection .form-control:focus {\\n  border-color: #fff;\\n  outline: none;\\n  box-shadow: none;\\n}\\nmodel-selection .btn {\\n  border-radius: 2px;\\n  padding: 0;\\n  box-shadow: none;\\n}\\nmodel-selection .btn-default {\\n  color: #333;\\n  background-color: unset;\\n  border-color: unset;\\n  border: none;\\n  font-size: 12px;\\n  color: #8793A1;\\n  background: #fff;\\n}\\nmodel-selection .btn-default.focus,\\nmodel-selection .btn-default:focus {\\n  color: #333;\\n  background-color: #ffffff;\\n  box-shadow: none;\\n}\\nmodel-selection .btn-default:hover {\\n  background-color: #ffffff;\\n  border-color: #0674da;\\n  transition: all ease-in 0.3s;\\n  box-shadow: none;\\n}\\nmodel-selection .btn-default.active,\\nmodel-selection .btn-default:active,\\nmodel-selection .open > .dropdown-toggle.btn-default {\\n  background-color: #ffffff;\\n  border-color: #fff;\\n  box-shadow: none;\\n  border-radius: 2px;\\n}\\nmodel-selection .btn-default-focus {\\n  box-shadow: none;\\n  outline: none;\\n  border-radius: 2px;\\n  background: #fff;\\n}\\nmodel-selection .dropdown-menu {\\n  box-shadow: none;\\n  border-radius: 0;\\n  padding: 0;\\n  font-size: 12px;\\n}\\nmodel-selection .ui-select-bootstrap .ui-select-choices-row.active > span {\\n  color: #fff;\\n  text-decoration: none;\\n  outline: 0;\\n  background-color: #0674da;\\n}\\nmodel-selection .ui-select-bootstrap .ui-select-match-text {\\n  margin-top: 1px;\\n}\\nmodel-selection .ui-select-bootstrap > .ui-select-choices,\\nmodel-selection .ui-select-bootstrap > .ui-select-no-choice {\\n  max-height: 500px;\\n  margin-top: 4px;\\n  border-radius: 2px;\\n}\\nmodel-selection .ui-select-bootstrap .ui-select-choices-row > span {\\n  padding: 7px 20px;\\n  border-bottom: 1px solid #fff;\\n}\\nmodel-selection wi-tree-node-virtual > div {\\n  padding-left: 10px;\\n}\\nmodel-selection wi-tree-node-virtual .node-content,\\nmodel-selection wi-tree-node-virtual .node-content::after {\\n  line-height: unset;\\n  padding: 7px 15px 7px 7px;\\n  background: #fff;\\n  border-bottom: unset;\\n  transition: all ease-in 0.1s;\\n  border-radius: 2px;\\n  user-select: none;\\n}\\nmodel-selection wi-tree-node-virtual .node-content.selected::after {\\n  background: none;\\n}\\nmodel-selection wi-tree-node-virtual .node-label {\\n  font-size: 12px;\\n  padding: 0 10px;\\n}\\nmodel-selection wi-tree-node-virtual .node-caret {\\n  width: 18px;\\n}\\nmodel-selection wi-tree-node-virtual .node-icon {\\n  filter: saturate(2);\\n}\\nmodel-selection wi-tree-node-virtual .node-content:hover {\\n  background: #f6f8fa;\\n  transition: all ease-in 0.1s;\\n}\\nmodel-selection wi-tree-node-virtual .node-content.selected {\\n  background: #f6f8fa;\\n  border-radius: 2px;\\n  transition: all ease-in 0.1s;\\n}\\nmodel-selection wi-tree-node-virtual .node-content::after {\\n  content: unset;\\n  color: transparent;\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  width: 4px;\\n}\\nmodel-selection wi-tree-view-virtual div input {\\n  max-width: calc(100% - 40px);\\n  line-height: unset;\\n  padding: 11px 20px;\\n  margin: 20px;\\n  border-bottom: 1px solid #e4ecfa;\\n  border-radius: 0;\\n  color: #353535;\\n  background: #EDEFF3;\\n}\\nmodel-selection .jsPanel-theme-default {\\n  width: calc(100% - 315px) !important;\\n  left: unset !important;\\n  top: unset !important;\\n  height: calc(100% - 60px) !important;\\n  box-shadow: none;\\n  background-color: #EDEFF3;\\n}\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./model-selection/newstyle.less?../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./training-prediction/newstyle.less":
/*!**************************************************************************************************************************!*\
  !*** ../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./training-prediction/newstyle.less ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"training-prediction {\\n  font-family: 'Roboto', sans-serif !important;\\n  font-size: 12px;\\n}\\ntraining-prediction .show {\\n  display: block;\\n}\\ntraining-prediction .table-row {\\n  display: flex;\\n  height: 50px;\\n  width: fit-content;\\n  min-width: 100%;\\n  background: #fff;\\n  align-items: center;\\n  border-bottom: 1px solid #D5DFEF;\\n  justify-content: space-between;\\n  transition: all ease-in 0.05s;\\n}\\ntraining-prediction .table-row:hover {\\n  background: #ffffff78;\\n  transition: all ease-in 0.05s;\\n}\\ntraining-prediction .table-row > div {\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  width: 120px;\\n}\\ntraining-prediction .table-block {\\n  padding-left: 20px;\\n  min-width: 120px;\\n}\\ntraining-prediction .table-main {\\n  overflow: auto;\\n  border-radius: 2px;\\n  height: 100%;\\n}\\ntraining-prediction .toolbar {\\n  display: flex;\\n  justify-content: center;\\n  margin-bottom: 40px;\\n}\\ntraining-prediction .toolbar .tab {\\n  display: flex;\\n}\\ntraining-prediction .toolbar .tab .tab-button {\\n  border-radius: 2px;\\n  padding: 9px 30px;\\n  background: #fff;\\n  color: #A5ACB4;\\n  cursor: pointer;\\n}\\ntraining-prediction .toolbar .tab .tab-button:hover {\\n  filter: invert(0.1);\\n  transition: all ease-in 0.2s;\\n}\\ntraining-prediction .toolbar .tab .active {\\n  color: #fff;\\n  background: #0674da;\\n  transition: all ease-in 0.2s;\\n}\\ntraining-prediction .dropdown-list {\\n  user-select: none;\\n  overflow: visible;\\n  position: absolute;\\n  z-index: 100000;\\n  left: -4px;\\n  border-radius: 2px;\\n  margin-top: 15px;\\n  padding: 15px 0;\\n  min-width: 200px;\\n  box-shadow: 0 0px 25px 0 #0000001c;\\n  background: #fff;\\n}\\ntraining-prediction .dropdown-list > div > div {\\n  padding: 10px 20px;\\n  cursor: pointer;\\n}\\ntraining-prediction .dropdown-list > div > div:hover {\\n  background: #f4f4f4;\\n}\\ntraining-prediction .dropdown-list-caret {\\n  position: absolute;\\n  left: 91px;\\n  top: -20px;\\n  z-index: 8;\\n  border: 10px solid transparent;\\n  border-bottom-color: #fff;\\n}\\ntraining-prediction .workspace {\\n  display: flex;\\n  flex: 1;\\n}\\ntraining-prediction .workspace .workspace-main {\\n  height: 100%;\\n  overflow: hidden;\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\ntraining-prediction .workspace .workspace-main .search {\\n  display: flex;\\n  align-items: center;\\n  color: #8793A1;\\n  min-width: 270px;\\n  position: absolute;\\n  top: 40px;\\n  z-index: 3;\\n  left: 40px;\\n  border-radius: 2px;\\n  margin-left: 15px;\\n  padding: 8px 20px;\\n  cursor: pointer;\\n}\\ntraining-prediction .workspace .workspace-main .button {\\n  display: flex;\\n  font-weight: bold;\\n  color: #A5ACB4;\\n  cursor: pointer;\\n  transition: all ease-in 0.2s;\\n  position: absolute;\\n  top: 40px;\\n  z-index: 3;\\n  right: 40px;\\n}\\ntraining-prediction .workspace .workspace-main .button .toolbar-button {\\n  border: 1px solid #A5ACB4;\\n  border-radius: 2px;\\n  margin-left: 15px;\\n  padding: 8px 20px;\\n  cursor: pointer;\\n}\\ntraining-prediction .workspace .workspace-main .button .toolbar-button:hover {\\n  border: 1px solid #0674da;\\n  transition: all ease-in 0.2s;\\n}\\ntraining-prediction .workspace .workspace-main .button .toolbar-button:active {\\n  transition: all ease-in 0.2s;\\n  transform: scale(0.8);\\n}\\ntraining-prediction .workspace .workspace-main .button .active {\\n  color: #fff;\\n  background: #0674da;\\n  border-color: #0674da;\\n}\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  min-width: 31px;\\n  height: 16px;\\n  margin-bottom: 0;\\n}\\n.switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0;\\n}\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-image: linear-gradient(to right, #a9a9a9, #bdbdbd);\\n  -webkit-transition: 0.2s;\\n  transition: 0.2s;\\n}\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 14px;\\n  width: 14px;\\n  left: 1px;\\n  bottom: 1px;\\n  background-color: white;\\n  -webkit-transition: 0.2s;\\n  transition: 0.2s;\\n  box-shadow: 0 1px 3px #0000003b;\\n}\\ninput:checked + .slider {\\n  background-image: linear-gradient(to right, #0674da, #3058c7);\\n}\\ninput:focus + .slider {\\n  box-shadow: none;\\n}\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(15px);\\n  -ms-transform: translateX(15px);\\n  transform: translateX(15px);\\n}\\n/* Rounded sliders */\\n.slider.round {\\n  border-radius: 34px;\\n}\\n.slider.round:before {\\n  border-radius: 50%;\\n}\\n.slim-scroller ::-webkit-scrollbar {\\n  background: transparent !important;\\n  width: 5px !important;\\n  height: 5px !important;\\n}\\n.slim-scroller ::-webkit-scrollbar-thumb {\\n  background-color: #dcdcdc !important;\\n}\\ninput,\\nlabel,\\nselect,\\nbutton,\\ntextarea {\\n  margin: 0;\\n  border: 0;\\n  padding: 0;\\n  display: inline-block;\\n  vertical-align: middle;\\n  white-space: normal;\\n  background: none;\\n  line-height: 1;\\n  /* Browsers have different default form fonts */\\n  font-size: 13px;\\n  font-family: Arial;\\n}\\n/* Remove the stupid outer glow in Webkit */\\ninput:focus {\\n  outline: 0;\\n}\\n/* Box Sizing Reset\\n-----------------------------------------------*/\\n/* All of our custom controls should be what we expect them to be */\\ninput,\\ntextarea {\\n  -webkit-box-sizing: content-box;\\n  -moz-box-sizing: content-box;\\n  box-sizing: content-box;\\n}\\n/* These elements are usually rendered a certain way by the browser */\\nbutton,\\ninput[type=reset],\\ninput[type=button],\\ninput[type=submit],\\ninput[type=checkbox],\\ninput[type=radio],\\nselect {\\n  -webkit-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box;\\n}\\n/* Text Inputs\\n-----------------------------------------------*/\\n/* Button Controls\\n-----------------------------------------------*/\\ninput[type=checkbox],\\ninput[type=radio] {\\n  width: 13px;\\n  height: 13px;\\n}\\n/* File Uploads\\n-----------------------------------------------*/\\n/* Search Input\\n-----------------------------------------------*/\\n/* Make webkit render the search input like a normal text field */\\ninput[type=search] {\\n  -webkit-appearance: textfield;\\n  -webkit-box-sizing: content-box;\\n}\\n/* Turn off the recent search for webkit. It adds about 15px padding on the left */\\n::-webkit-search-decoration {\\n  display: none;\\n}\\n/* Buttons\\n-----------------------------------------------*/\\nbutton,\\ninput[type=\\\"reset\\\"],\\ninput[type=\\\"button\\\"],\\ninput[type=\\\"submit\\\"] {\\n  /* Fix IE7 display bug */\\n  overflow: visible;\\n  width: auto;\\n}\\n/* IE8 and FF freak out if this rule is within another selector */\\n::-webkit-file-upload-button {\\n  padding: 0;\\n  border: 0;\\n  background: none;\\n}\\n/* Textarea\\n-----------------------------------------------*/\\ntextarea {\\n  /* Move the label to the top */\\n  vertical-align: top;\\n  /* Turn off scroll bars in IE unless needed */\\n  overflow: auto;\\n}\\n/* Selects\\n-----------------------------------------------*/\\nselect[multiple] {\\n  /* Move the label to the top */\\n  vertical-align: top;\\n}\\n.loader08 {\\n  width: 20px;\\n  height: 20px;\\n  position: relative;\\n  animation: loader08-ub06eb63b 1s ease infinite;\\n  top: 50%;\\n  margin: -46px auto 0;\\n}\\n@keyframes loader08-ub06eb63b {\\n  0%,\\n  100% {\\n    box-shadow: -13px 20px 0 #0674da, 13px 20px 0 rgba(0, 82, 236, 0.2), 13px 46px 0 rgba(0, 82, 236, 0.2), -13px 46px 0 rgba(0, 82, 236, 0.2);\\n  }\\n  25% {\\n    box-shadow: -13px 20px 0 rgba(0, 82, 236, 0.2), 13px 20px 0 #0674da, 13px 46px 0 rgba(0, 82, 236, 0.2), -13px 46px 0 rgba(0, 82, 236, 0.2);\\n  }\\n  50% {\\n    box-shadow: -13px 20px 0 rgba(0, 82, 236, 0.2), 13px 20px 0 rgba(0, 82, 236, 0.2), 13px 46px 0 #0674da, -13px 46px 0 rgba(0, 82, 236, 0.2);\\n  }\\n  75% {\\n    box-shadow: -13px 20px 0 rgba(0, 82, 236, 0.2), 13px 20px 0 rgba(0, 82, 236, 0.2), 13px 46px 0 rgba(0, 82, 236, 0.2), -13px 46px 0 #0674da;\\n  }\\n}\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack:///./training-prediction/newstyle.less?../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js");

/***/ }),

/***/ "../node_modules/css-loader/dist/runtime/api.js":
/*!******************************************************!*\
  !*** ../node_modules/css-loader/dist/runtime/api.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}\n\n//# sourceURL=webpack:///../node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "../node_modules/decode-uri-component/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/decode-uri-component/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n\n\n//# sourceURL=webpack:///../node_modules/decode-uri-component/index.js?");

/***/ }),

/***/ "../node_modules/query-string/index.js":
/*!*********************************************!*\
  !*** ../node_modules/query-string/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst strictUriEncode = __webpack_require__(/*! strict-uri-encode */ \"../node_modules/strict-uri-encode/index.js\");\nconst decodeComponent = __webpack_require__(/*! decode-uri-component */ \"../node_modules/decode-uri-component/index.js\");\nconst splitOnFirst = __webpack_require__(/*! split-on-first */ \"../node_modules/split-on-first/index.js\");\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn key => (result, value, index) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(',')];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;\n\t\t\t\tconst newValue = isArray ? value.split(',') : value;\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(param.replace(/\\+/g, ' '), '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\t\tvalue = Number(value);\n\t\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\t\tvalue = value.toLowerCase() === 'true';\n\t\t}\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = encoderForArrayFormat(options);\n\tconst keys = Object.keys(object);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: removeHash(input).split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n\n\n//# sourceURL=webpack:///../node_modules/query-string/index.js?");

/***/ }),

/***/ "../node_modules/split-on-first/index.js":
/*!***********************************************!*\
  !*** ../node_modules/split-on-first/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n\n\n//# sourceURL=webpack:///../node_modules/split-on-first/index.js?");

/***/ }),

/***/ "../node_modules/strict-uri-encode/index.js":
/*!**************************************************!*\
  !*** ../node_modules/strict-uri-encode/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\n\n//# sourceURL=webpack:///../node_modules/strict-uri-encode/index.js?");

/***/ }),

/***/ "../node_modules/style-loader/lib/addStyles.js":
/*!*****************************************************!*\
  !*** ../node_modules/style-loader/lib/addStyles.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"../node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///../node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "../node_modules/style-loader/lib/urls.js":
/*!************************************************!*\
  !*** ../node_modules/style-loader/lib/urls.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack:///../node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "../wi-uservice.json":
/*!***************************!*\
  !*** ../wi-uservice.json ***!
  \***************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, default */
/***/ (function(module) {

eval("module.exports = [{\"name\":\"combination_ensemble_som\",\"port\":30502,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30502\",\"Test create\":\"pass\",\"type\":\"classification\",\"label\":\"Combination Ensemble Som\",\"nnnw\":false,\"create\":\"combination-ensemble-som\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_combination_ensemble_som_01\"},{\"name\":\"n_estimators\",\"type\":\"integer\",\"example\":3},{\"name\":\"random_state\",\"type\":\"integer\",\"example\":1},{\"name\":\"size_of_estimator\",\"type\":\"integer\",\"example\":1}],\"train\":[{\"name\":\"weights_init\",\"type\":\"enum\",\"enum\":[{\"data\":{\"label\":\"random\"},\"properties\":\"random\"},{\"data\":{\"label\":\"sample\"},\"properties\":\"sample\"},{\"data\":{\"label\":\"pca\"},\"properties\":\"pca\"}],\"example\":\"random\"},{\"name\":\"learning_decay_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"learning_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"neighborhood\",\"type\":\"enum\",\"enum\":[{\"data\":{\"label\":\"bubble\"},\"properties\":\"bubble\"},{\"data\":{\"label\":\"gaussian\"},\"properties\":\"gaussian\"}],\"example\":\"bubble\"},{\"name\":\"sigma\",\"type\":\"integer\",\"example\":1},{\"name\":\"sigma_decay_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"subset_size\",\"type\":\"integer\",\"example\":1},{\"name\":\"sup_batch_size\",\"type\":\"integer\",\"example\":1},{\"name\":\"sup_num_iters\",\"type\":\"integer\",\"example\":1},{\"name\":\"unsup_batch_size\",\"type\":\"integer\",\"example\":1},{\"name\":\"unsup_num_iters\",\"type\":\"integer\",\"example\":1}]}},{\"name\":\"decision_tree_classifier\",\"port\":30503,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30503\",\"Test create\":\"pass\",\"type\":\"classification\",\"label\":\"Decision Tree Classifier\",\"nnnw\":false,\"create\":\"decision_tree\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_decision_tree_classifier_01\"},{\"name\":\"min_samples_split\",\"type\":\"integer\",\"example\":3},{\"name\":\"min_impurity_decrease\",\"type\":\"number\",\"example\":0.01},{\"name\":\"criterion\",\"type\":\"enum\",\"example\":\"entropy\"}]}},{\"name\":\"decision_tree_regression\",\"port\":30504,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30504\",\"Test create\":\"pass\",\"type\":\"regression\",\"label\":\"Decision Tree Regression\",\"nnnw\":false,\"create\":\"decision_tree\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_decision_tree_01\"},{\"name\":\"max_depth\",\"type\":\"integer\",\"example\":3},{\"name\":\"max_features\",\"type\":\"integer\",\"example\":1},{\"name\":\"criterion\",\"type\":\"enum\",\"example\":\"mse\"},{\"name\":\"random_state\",\"type\":\"integer\",\"example\":1},{\"name\":\"splitter\",\"type\":\"enum\",\"example\":\"best\"}]}},{\"name\":\"distribution_ensemble_som\",\"port\":30505,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30505\",\"Test create\":\"pass\",\"type\":\"classification\",\"label\":\"Distribution Ensemble Som\",\"nnnw\":false,\"create\":\"distribution-ensemble-som\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_distribution_ensemble_som_01\"},{\"name\":\"n_estimators\",\"type\":\"integer\",\"example\":3},{\"name\":\"random_state\",\"type\":\"integer\",\"example\":1},{\"name\":\"size_of_estimator\",\"type\":\"integer\",\"example\":1}],\"train\":[{\"name\":\"learning_decay_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"learning_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"neighborhood\",\"type\":\"enum\",\"example\":\"bubble\"},{\"name\":\"sigma\",\"type\":\"integer\",\"example\":1},{\"name\":\"sigma_decay_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"subset_size\",\"type\":\"integer\",\"example\":1},{\"name\":\"sup_batch_size\",\"type\":\"integer\",\"example\":1},{\"name\":\"sup_num_iters\",\"type\":\"integer\",\"example\":1},{\"name\":\"unsup_batch_size\",\"type\":\"integer\",\"example\":1},{\"name\":\"unsup_num_iters\",\"type\":\"integer\",\"example\":1}]}},{\"name\":\"huber_regression\",\"port\":30506,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30506\",\"Test create\":\"pass\",\"type\":\"regression\",\"label\":\"Huber Regression\",\"nnnw\":false,\"create\":\"huber\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_huber_01\"},{\"name\":\"alpha\",\"type\":\"number\",\"example\":0.0001},{\"name\":\"epsilon\",\"type\":\"number\",\"example\":1.35},{\"name\":\"fit_intercept\",\"type\":\"boolean\",\"example\":true},{\"name\":\"max_iter\",\"type\":\"integer\",\"example\":10},{\"name\":\"tol\",\"type\":\"number\",\"example\":1},{\"name\":\"warm_start\",\"type\":\"boolean\",\"example\":true}]}},{\"name\":\"knn_classifier\",\"port\":30507,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30507\",\"Test create\":\"pass\",\"type\":\"classification\",\"label\":\"Knn Classifier\",\"nnnw\":false,\"create\":\"knn\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_k_nearest_neighbors_classifier_01\"},{\"name\":\"num_neighbors\",\"type\":\"integer\",\"example\":100},{\"name\":\"p\",\"type\":\"integer\",\"example\":1},{\"name\":\"metric\",\"type\":\"string\",\"example\":\"minkowski\"}]}},{\"name\":\"lasso_regression\",\"port\":30508,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30508\",\"Test create\":\"pass\",\"type\":\"regression\",\"label\":\"Lasso Regression\",\"nnnw\":false,\"create\":\"lasso\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_huber_01\"},{\"name\":\"max_iter\",\"type\":\"integer\",\"example\":10},{\"name\":\"random_state\",\"type\":\"integer\",\"example\":1},{\"name\":\"tol\",\"type\":\"number\",\"example\":0.0001},{\"name\":\"alpha\",\"type\":\"integer\",\"example\":1}]}},{\"name\":\"linear_regression\",\"port\":30509,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30509\",\"Test create\":\"pass\",\"type\":\"regression\",\"label\":\"Linear Regression\",\"nnnw\":false,\"create\":\"linear_regression\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_linear_regression_01\"},{\"name\":\"fit_intercept\",\"type\":\"boolean\",\"example\":true},{\"name\":\"normalize\",\"type\":\"boolean\",\"example\":true}]}},{\"name\":\"logistic_regression_classifier\",\"port\":30510,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30510\",\"Test create\":\"pass\",\"type\":\"classification\",\"label\":\"Logistic Regression Classifier\",\"nnnw\":false,\"create\":\"logistic_regression_classifier\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_logistic_regression_tree_classifier_01\"},{\"name\":\"c\",\"type\":\"integer\",\"example\":20},{\"name\":\"max_iter\",\"type\":\"integer\",\"example\":10000},{\"name\":\"solver\",\"type\":\"enum\",\"example\":\"liblinear\"}]}},{\"name\":\"neural_network_classifier\",\"port\":30511,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30511\",\"Test create\":\"pass\",\"type\":\"classification\",\"label\":\"Neural Network Classifier\",\"nnnw\":true,\"create\":\"neural_network\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_neural_network_classifier_01\"},{\"name\":\"activation\",\"type\":\"enum\",\"example\":\"elu\"},{\"name\":\"algorithm\",\"type\":\"enum\",\"example\":\"backprop\"},{\"name\":\"boosting_ops\",\"type\":\"integer\",\"example\":0},{\"name\":\"decay\",\"type\":\"number\",\"example\":0.000001},{\"name\":\"hidden_layer_sizes\",\"type\":\"List\",\"example\":[10,20,10]},{\"name\":\"learning_rate\",\"type\":\"number\",\"example\":0.001},{\"name\":\"num_epochs\",\"type\":\"integer\",\"example\":1000},{\"name\":\"optimizer\",\"type\":\"enum\",\"example\":\"nadam\"},{\"name\":\"population\",\"type\":\"integer\",\"example\":50},{\"name\":\"sigma\",\"type\":\"number\",\"example\":0.01},{\"name\":\"warm_up\",\"type\":\"boolean\",\"example\":true}]}},{\"name\":\"neural_network_regression\",\"port\":30512,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30512\",\"Test create\":\"pass\",\"type\":\"regression\",\"label\":\"Neural Network Regression\",\"nnnw\":true,\"create\":\"neural_network\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_neural_network_01\"},{\"name\":\"activation\",\"type\":\"enum\",\"example\":\"relu\"},{\"name\":\"learning_rate_init\",\"type\":\"number\",\"example\":0.005},{\"name\":\"max_iter\",\"type\":\"integer\",\"example\":100},{\"name\":\"hidden_layer_sizes\",\"type\":\"List\",\"example\":[10,20,10]},{\"name\":\"solver\",\"type\":\"enum\",\"example\":\"lbfgs\"},{\"name\":\"tol\",\"type\":\"number\",\"example\":0.0003}]}},{\"name\":\"non_linear_regressor\",\"port\":30513,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30513\",\"Test create\":\"pass\",\"type\":\"regression\",\"label\":\"Non Linear Regressor\",\"nnnw\":false,\"create\":\"non_linear_regressor\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_non_linear_regressor_01\"},{\"name\":\"parameters\",\"type\":\"List\",\"example\":[\"a\",\"b\",\"c\"]},{\"name\":\"string_function\",\"type\":\"string\",\"example\":\"a*x1**2+b*log(x2)+c*x3\"},{\"name\":\"variables\",\"type\":\"List\",\"example\":[\"x1\",\"x2\",\"x3\"]}]}},{\"name\":\"random_forest_classifier\",\"port\":30514,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30514\",\"Test create\":\"pass\",\"type\":\"classification\",\"label\":\"Random Forest Classifier\",\"nnnw\":false,\"create\":\"random_forest\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_random_forest_classifier_01\"},{\"name\":\"criterion\",\"type\":\"enum\",\"example\":\"entropy\"},{\"name\":\"min_impurity_decrease\",\"type\":\"number\",\"example\":0.0003},{\"name\":\"min_samples_split\",\"type\":\"integer\",\"example\":5},{\"name\":\"num_trees\",\"type\":\"integer\",\"example\":20}]}},{\"name\":\"random_forest_regression\",\"port\":30515,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30515\",\"Test create\":\"pass\",\"type\":\"regression\",\"label\":\"Random Forest Regression\",\"nnnw\":false,\"create\":\"random_forest\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_random_forest_01\"},{\"name\":\"bootstrap\",\"type\":\"boolean\",\"example\":true},{\"name\":\"criterion\",\"type\":\"enum\",\"example\":\"mse\"},{\"name\":\"max_depth\",\"type\":\"integer\",\"example\":3},{\"name\":\"max_features\",\"type\":\"integer\",\"example\":2},{\"name\":\"n_estimators\",\"type\":\"integer\",\"example\":20},{\"name\":\"random_state\",\"type\":\"integer\",\"example\":0}]}},{\"name\":\"supervise_som\",\"port\":30516,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30516\",\"Test create\":\"pass\",\"type\":\"classification\",\"label\":\"Supervise Som\",\"nnnw\":false,\"create\":\"supervise-som\",\"som-visualization\":true,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_supervise_som_01\"},{\"name\":\"n_cols\",\"type\":\"integer\",\"example\":3},{\"name\":\"n_rows\",\"type\":\"integer\",\"example\":1},{\"name\":\"random_state\",\"type\":\"integer\",\"example\":1}],\"train\":[{\"name\":\"learning_decay_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"learning_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"neighborhood\",\"type\":\"enum\",\"example\":\"bubble\"},{\"name\":\"weights_init\",\"type\":\"enum\",\"example\":\"random\"},{\"name\":\"sigma\",\"type\":\"integer\",\"example\":1},{\"name\":\"sigma_decay_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"sup_batch_size\",\"type\":\"integer\",\"example\":1},{\"name\":\"sup_num_iters\",\"type\":\"integer\",\"example\":1},{\"name\":\"unsup_batch_size\",\"type\":\"integer\",\"example\":1},{\"name\":\"unsup_num_iters\",\"type\":\"integer\",\"example\":1}]}},{\"name\":\"svm_regression\",\"port\":30517,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30517\",\"Test create\":\"fail\",\"type\":\"regression\",\"label\":\"Svm Regression\",\"nnnw\":false,\"create\":\"svm\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_svm_01\"},{\"name\":\"C\",\"type\":\"integer\",\"example\":1},{\"name\":\"degree\",\"type\":\"integer\",\"example\":3},{\"name\":\"gamma\",\"type\":\"number\",\"example\":0.05},{\"name\":\"kernel\",\"type\":\"enum\",\"example\":\"rbf\"},{\"name\":\"max_iter\",\"type\":\"integer\",\"example\":10},{\"name\":\"tol\",\"type\":\"number\",\"example\":0.001}]}},{\"name\":\"unsupervise_som\",\"port\":30518,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30518\",\"Test create\":\"pass\",\"type\":\"classification\",\"label\":\"Unsupervise Som\",\"nnnw\":false,\"create\":\"unsupervise-som\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_unsupervise_som_01\"},{\"name\":\"n_cols\",\"type\":\"integer\",\"example\":3},{\"name\":\"n_rows\",\"type\":\"integer\",\"example\":1},{\"name\":\"random_state\",\"type\":\"integer\",\"example\":1}],\"train\":[{\"name\":\"learning_decay_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"learning_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"neighborhood\",\"type\":\"enum\",\"example\":\"bubble\"},{\"name\":\"weights_init\",\"type\":\"enum\",\"example\":\"random\"},{\"name\":\"sigma\",\"type\":\"integer\",\"example\":1},{\"name\":\"sigma_decay_rate\",\"type\":\"integer\",\"example\":1},{\"name\":\"sup_batch_size\",\"type\":\"integer\",\"example\":1},{\"name\":\"num_clusters\",\"type\":\"integer\",\"example\":1}]}},{\"name\":\"xgboost_regression\",\"port\":30519,\"ip\":\"118.70.171.246\",\"url\":\"http://118.70.171.246:30519\",\"Test create\":\"pass\",\"type\":\"regression\",\"label\":\"Xgboost Regression\",\"nnnw\":false,\"create\":\"xgboost\",\"som-visualization\":false,\"payload\":{\"params\":[{\"name\":\"model_id\",\"type\":\"string\",\"example\":\"test_xgboost_01\"},{\"name\":\"max_depth\",\"type\":\"integer\",\"example\":3},{\"name\":\"booster\",\"type\":\"enum\",\"example\":\"gbtree\"},{\"name\":\"gamma\",\"type\":\"number\",\"example\":0.05},{\"name\":\"n_estiamtors\",\"type\":\"integer\",\"example\":100},{\"name\":\"random_state\",\"type\":\"integer\",\"example\":1},{\"name\":\"reg_alpha\",\"type\":\"integer\",\"example\":1},{\"name\":\"reg_lamda\",\"type\":\"integer\",\"example\":1}]}}];\n\n//# sourceURL=webpack:///../wi-uservice.json?");

/***/ }),

/***/ "./config/config.js":
/*!**************************!*\
  !*** ./config/config.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n\tdev: {\n\t\tname :'Models_dev',\n\t},\n\tproduct: {\n\t\tname :'Models_prod'\n\t}\n}\n\n//# sourceURL=webpack:///./config/config.js?");

/***/ }),

/***/ "./dataset-selection/index.js":
/*!************************************!*\
  !*** ./dataset-selection/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = \"datasetSelection\";\nconst componentName = \"datasetSelection\";\nmodule.exports.name = moduleName;\n\nvar app = angular.module(moduleName, ['wiTreeView','wiDroppable','angularResizable','wiTreeViewVirtual']);\n\napp.component(componentName,{\n\ttemplate: __webpack_require__(/*! ./newtemplate.html */ \"./dataset-selection/newtemplate.html\"),\n    controller: DatasetSelectionController,\n    style: __webpack_require__(/*! ./newstyle.less */ \"./dataset-selection/newstyle.less\"),\n    controllerAs: 'self',\n    bindings: {\n    \tidProject: '<',\n        inputCurveSpecs: '<',\n        targetCurveSpec: '<',\n        machineLearnSteps: '<',\n        typeSelected: '<',\n        selectionList: '<',\n        mergeCurves: '<',\n        onAddInputItem: '<',\n        getFnOnInputChanged: '<',\n        onTargetItemChanged: '<',\n        onRemoveInputItem: '<',\n        onChangeType: '<',\n        onRemoveDataset: '<',\n        makeSelectionList: '<',\n        drop: '<',\n    }\n});\n\nfunction DatasetSelectionController($scope, wiApi, $timeout){\n\tlet self = \tthis;\n\tthis.treedata;\n    this.buttons = [{\n        label: 'Curve',\n        type: 'curve',\n        icon: 'curve-16x16'\n    },{\n        label: 'Family Curve',\n        type: 'family_curve',\n        icon: 'family-16x16'\n    },{\n        label: 'Main Family',\n        type: 'main_family',\n        icon: 'family-group-16x16'\n    }];\n    this.getLabel = function (node) {\n        return (node||{}).name || 'no name';\n    }\t\n    this.getIcon = function (node) {\n    \tif(!node) return;\n        if(node.idCurve) {\n    \t\treturn \"curve-16x16\";\n    \t} else if(node.idDataset){\n    \t\treturn \"curve-data-16x16\";\n    \t} else if(node.idWell) {\n\t        return \"well-16x16\";\n \t\t} else if(node.idProject) {\n            return \"project-normal-16x16\";\n        }\n    }\n    this.getChildren = function (node) {\n    \tif (!node) return [];\n        if(node.idDataset){\n            return node.curves || [];           \n        }else if (node.idWell) {\n            return node.datasets || [];\n        }else if(node.idProject) {\n            return node.wells || [];\n        }\n        return [];\n    }\n    this.getChildrenDataset = function(node) {\n        // if (!node) return [];\n        // if (node.idWell && node.idProject) {\n        //     return node.datasets || [];\n        // }\n        return [];\n    }\n    this.clickFn = function(event,node,selectIds,rootnode) {\n        if(node.idProject && node.wells) return;\n        if(node.idWell && node.datasets) return;\n        if(node.idProject) {\n            wiApi.getFullInfoPromise(node.idProject, node.owner, node.name).then(dataProject => {\n                console.log(dataProject);\n                $timeout(()=>{\n                    node.wells = dataProject.wells;   \n                    for(let i of node.wells) {\n                        for(let j of i.datasets) {\n                            j.wellName = i.name;\n                        }\n                    }   \n                })\n            });\n        }\n    }\n    this.runMatch = function(node,filter) {\n        return node.name.includes(filter);\n    }\n    this.$onInit = function() {\n        // (async() => {\n        //     try {\n        //         self.treedata = await wiApi.getProjectsPromise();\n        //     }catch (e) {\n        //         console.error(e);\n        //     }\n        // })();\n        $scope.$watch(function () {\n\t\t\treturn localStorage.getItem('token');\n\t\t}, function (newValue, oldValue) {\n\t\t\tif ((localStorage.getItem(\"token\")) !== null) {\n                wiApi.getProjectsPromise()\n                .then((data) => {\n                    $timeout(() => {\n                        self.treedata = data;\n                    })\n                })\n                console.log(\"okokokok\")\n\t\t\t}\n\t\t});\n       \n    }\n}\n\n//# sourceURL=webpack:///./dataset-selection/index.js?");

/***/ }),

/***/ "./dataset-selection/newstyle.less":
/*!*****************************************!*\
  !*** ./dataset-selection/newstyle.less ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./newstyle.less */ \"../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./dataset-selection/newstyle.less\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./dataset-selection/newstyle.less?");

/***/ }),

/***/ "./dataset-selection/newtemplate.html":
/*!********************************************!*\
  !*** ./dataset-selection/newtemplate.html ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"main-content slim-scroller\\\">\\n\\t<div class=\\\"input-selection\\\">\\n\\t\\t<div class=\\\"header\\\">\\n\\t\\t\\t<span class=\\\"title\\\">\\n\\t\\t\\t\\t<span class=\\\"ti ti-import\\\" style=\\\"margin-right: 15px;\\\"></span>\\n\\t\\t\\t\\tInput Selection</span>\\n\\t\\t\\t<span class=\\\"sub\\\">Select the types below or Add new input curve.</span>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"button-input\\\">\\n\\t\\t\\t<!-- <div class=\\\"button ti ti-comments\\\" ng-repeat=\\\"button in self.buttons track by $index\\\"\\n\\t\\t\\t\\tng-click=\\\"self.isActive = $index;self.onChangeType(button);\\\" -->\\n\\t\\t\\t<!-- <div class=\\\"button ti ti-comments\\\" ng-repeat=\\\"button in self.buttons track by $index\\\"\\n\\t\\t\\t\\tng-click=\\\"self.onChangeType(button);\\\"\\n\\t\\t\\t\\tng-class=\\\"{'active': self.isActive == $index || self.typeSelected == button.type}\\\"></div> -->\\n\\t\\t\\t<div title=\\\"Curve\\\" class=\\\"button\\\" ng-class=\\\"{'active': self.typeSelected == self.buttons[0].type}\\\" ng-click=\\\"self.onChangeType(self.buttons[0])\\\">\\n\\t\\t\\t\\t<div class=\\\"ml-curve-16x16\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div title=\\\"Family\\\" class=\\\"button\\\" ng-class=\\\"{'active': self.typeSelected == self.buttons[1].type}\\\" ng-click=\\\"self.onChangeType(self.buttons[1])\\\">\\n\\t\\t\\t\\t<div class=\\\"ml-family-16x16\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div title=\\\"Family Group\\\" class=\\\"button\\\" ng-class=\\\"{'active': self.typeSelected == self.buttons[2].type}\\\" ng-click=\\\"self.onChangeType(self.buttons[2])\\\">\\n\\t\\t\\t\\t<div class=\\\"ml-family-group-16x16\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div title=\\\"Add input curve\\\" class=\\\"button\\\" ng-click=\\\"self.onAddInputItem()\\\">\\n\\t\\t\\t\\t<div class=\\\"ml-new-16x16\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"margin-top: 20px;\\\">\\n\\t\\t\\t<div class=\\\"title\\\">\\n\\t\\t\\t\\t{{self.targetCurveSpec.label}}\\n\\t\\t\\t</div>\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<wi-dropdown-list place-holder=\\\"Curve\\\" items=\\\"self.selectionList\\\" hide-delete-button='true'\\n\\t\\t\\t\\t\\tcurrent-select='self.targetCurveSpec.currentSelect' on-item-changed=\\\"self.onTargetItemChanged\\\">\\n\\t\\t\\t\\t</wi-dropdown-list>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"list-input\\\">\\n\\t\\t\\t<div class=\\\"list-scroll\\\" onmouseover=this.style.overflow='overlay' onmouseout=this.style.overflow='hidden'>\\n\\t\\t\\t\\t<div class=\\\"input-curve\\\" ng-repeat=\\\"item in self.inputCurveSpecs track by $index\\\">\\n\\t\\t\\t\\t\\t<!-- <div style=\\\" height: 45px; width: 45px; margin-right: 15px; background: #a6d4ff;\\\">\\n\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t<div style=\\\"flex: 1;\\\">\\n\\t\\t\\t\\t\\t\\t<div style=\\\"display: flex; margin-bottom: 10px; justify-content: space-between;\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div style=\\\"font-weight: bold; font-size: 12px; \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t{{item.label}} {{$index+1}}\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div style=\\\"margin:0 10px; cursor: pointer; display: flex; align-items: center;\\\" ng-click=\\\"self.onRemoveInputItem($index)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"ti ti-close\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<wi-dropdown-list style=\\\"width: 100%;\\\" place-holder=\\\"Curve\\\" items=\\\"self.selectionList\\\" hide-delete-button='true'\\n\\t\\t\\t\\t\\t\\t\\ton-item-changed=\\\"self.getFnOnInputChanged($index)\\\" current-select=\\\"item.currentSelect\\\">\\n\\t\\t\\t\\t\\t\\t</wi-dropdown-list>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\t<div class=\\\"workspace\\\">\\n\\t\\t<div style=\\\"flex: 1; overflow: hidden;\\\">\\n\\t\\t\\t<div class=\\\"header sticky\\\">\\n\\t\\t\\t\\t<span class=\\\"title\\\">Traning</span>\\n\\t\\t\\t\\t<span class=\\\"sub\\\">Drag datasets from project list</span>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<wi-droppable container-style=\\\"{'flex':'1','display':'flex'}\\\" onmouseover=this.style.overflow='overlay'\\n\\t\\t\\t\\tonmouseout=this.style.overflow='hidden' on-drop=\\\"self.drop('training')\\\"\\n\\t\\t\\t\\tstyle=\\\"display: flex;height: calc(100% - 67px); overflow-x: hidden;\\\">\\n\\t\\t\\t\\t<div class=\\\"no-datasets\\\" ng-show=\\\"!self.machineLearnSteps['training'].datasets.length\\\" style=\\\"background-image:url('../public/bg-datasets.png')\\\">\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"ti ti-import\\\" style=\\\"font-size: 40px;\\n\\t\\t\\t\\t\\t\\t\\t\\tmargin-bottom: 20px;;\\\"></div>\\n\\t\\t\\t\\t\\t<div>Drop datasets here</div> -->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div ng-show=\\\"self.machineLearnSteps['training'].datasets.length\\\"\\n\\t\\t\\t\\t\\tstyle=\\\"display: flex; flex: 1;flex-direction: column;\\\">\\n\\t\\t\\t\\t\\t<div style=\\\"height: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t<div ng-repeat=\\\"item in self.machineLearnSteps['training'].datasets track by $index\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"datasets-info\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"button ti ti-close\\\" ng-click=\\\"self.onRemoveDataset('training', $index)\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\" style=\\\"font-size: 12px; font-weight: 400;\\\">Dataset name:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{item.name}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"detail\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>Well name: {{item.wellName}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>Curves: {{item.curves.length}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>ID dataset: {{item.idDataset}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</wi-droppable>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"flex: 1; overflow: hidden; margin-left: 20px;\\\">\\n\\t\\t\\t<div class=\\\"header sticky\\\">\\n\\t\\t\\t\\t<span class=\\\"title\\\">Verify</span>\\n\\t\\t\\t\\t<span class=\\\"sub\\\">Drag datasets from project list</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<wi-droppable container-style=\\\"{'flex':'1','display':'flex'}\\\" onmouseover=this.style.overflow='overlay'\\n\\t\\t\\t\\tonmouseout=this.style.overflow='hidden' on-drop=\\\"self.drop('verify')\\\"\\n\\t\\t\\t\\tstyle=\\\"display: flex;height: calc(100% - 67px); overflow-x: hidden;\\\">\\n\\t\\t\\t\\t<div class=\\\"no-datasets\\\" ng-show=\\\"!self.machineLearnSteps['verify'].datasets.length\\\" style=\\\"background-image:url('../public/bg-datasets.png')\\\">\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"ti ti-import\\\" style=\\\"font-size: 40px;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmargin-bottom: 20px;\\\"></div>\\n\\t\\t\\t\\t\\t<div>Drop datasets here</div> -->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div ng-show=\\\"self.machineLearnSteps['verify'].datasets.length\\\"\\n\\t\\t\\t\\t\\tstyle=\\\"display: flex; flex: 1;flex-direction: column;\\\">\\n\\t\\t\\t\\t\\t<div style=\\\"height: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t<div ng-repeat=\\\"item in self.machineLearnSteps['verify'].datasets track by $index\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"datasets-info\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"button ti ti-close\\\" ng-click=\\\"self.onRemoveDataset('verify', $index)\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\" style=\\\"font-size: 12px; font-weight: 400;\\\">Dataset name:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{item.name}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"detail\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>Well name: {{item.wellName}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>Curves: {{item.curves.length}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>ID dataset: {{item.idDataset}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</wi-droppable>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"flex: 1; overflow: hidden; margin-left: 20px;\\\">\\n\\t\\t\\t<div class=\\\"header sticky\\\">\\n\\t\\t\\t\\t<span class=\\\"title\\\">Prediction</span>\\n\\t\\t\\t\\t<span class=\\\"sub\\\">Drag datasets from project list</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<wi-droppable container-style=\\\"{'flex':'1','display':'flex'}\\\" onmouseover=this.style.overflow='overlay'\\n\\t\\t\\t\\tonmouseout=this.style.overflow='hidden' on-drop=\\\"self.drop('prediction')\\\"\\n\\t\\t\\t\\tstyle=\\\"display: flex;height: calc(100% - 67px); overflow-x: hidden;\\\">\\n\\t\\t\\t\\t<div class=\\\"no-datasets\\\" ng-show=\\\"!self.machineLearnSteps['prediction'].datasets.length\\\" style=\\\"background-image:url('../public/bg-datasets.png')\\\">\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"ti ti-import\\\" style=\\\"font-size: 40px;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmargin-bottom: 20px;\\\"></div>\\n\\t\\t\\t\\t\\t<div>Drop datasets here</div> -->\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div ng-show=\\\"self.machineLearnSteps['prediction'].datasets.length\\\"\\n\\t\\t\\t\\t\\tstyle=\\\"display: flex; flex: 1;flex-direction: column;\\\">\\n\\t\\t\\t\\t\\t<div style=\\\"height: 100%;\\\">\\n\\t\\t\\t\\t\\t\\t<div ng-repeat=\\\"item in self.machineLearnSteps['prediction'].datasets track by $index\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"datasets-info\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"button ti ti-close\\\" ng-click=\\\"self.onRemoveDataset('prediction', $index)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\" style=\\\"font-size: 12px; font-weight: 400;\\\">Dataset name:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{{item.name}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"detail\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>Well name: {{item.wellName}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>Curves: {{item.curves.length}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>ID dataset: {{item.idDataset}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</wi-droppable>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"input-selection\\\">\\n\\t\\t<div class=\\\"header\\\">\\n\\t\\t\\t<span class=\\\"title\\\">\\n\\t\\t\\t\\t<span class=\\\"ti ti-align-left\\\" style=\\\"margin-right: 15px;\\\"></span>\\n\\t\\t\\t\\t\\tProject list\\n\\t\\t\\t</span>\\n\\t\\t\\t<span class=\\\"sub\\\">Project sync from i2G cloud, please login to get ít</span>\\n\\t\\t</div>\\n\\t\\t<div style=\\\"height: 100%; margin: 0 -20px;\\\">\\n\\t\\t\\t<wi-tree-view-virtual tree-root=\\\"self.treedata\\\" hide-unmatched='true' get-children=\\\"self.getChildren\\\"\\n\\t\\t\\t\\tclick-fn='self.clickFn' get-label=\\\"self.getLabel\\\" get-icon='self.getIcon' run-match='self.runMatch'\\n\\t\\t\\t\\tkeep-chidren='true'>\\n\\t\\t\\t</wi-tree-view-virtual>\\n\\t\\t</div>\\n\\n\\t</div>\\n</div>\";\n\n//# sourceURL=webpack:///./dataset-selection/newtemplate.html?");

/***/ }),

/***/ "./machine-tabs/index.js":
/*!*******************************!*\
  !*** ./machine-tabs/index.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = \"machineTabs\";\nconst componentName = \"machineTabs\";\nmodule.exports.name = moduleName;\nconst queryString = __webpack_require__(/*! query-string */ \"../node_modules/query-string/index.js\")\n\nvar app = angular.module(moduleName, ['modelSelection','datasetSelection','trainingPrediction','wiApi','wiNeuralNetwork','wiLogin','wiToken']);\n\napp.component(componentName,{\n\ttemplate: __webpack_require__(/*! ./newtemplate.html */ \"./machine-tabs/newtemplate.html\"),\n    controller: MachineTabsController,\n    style: __webpack_require__(/*! ./newstyle.less */ \"./machine-tabs/newstyle.less\"),\n    controllerAs: 'self',\n    bindings: {\n    \ttoken: '<'\n    }\n});\n\nfunction MachineTabsController($scope, $timeout, wiToken, wiApi, $http){\n    // toastr.options = {\n    //     \"closeButton\": false,\n    //     \"debug\": false,\n    //     \"newestOnTop\": false,\n    //     \"progressBar\": false,\n    //     \"positionClass\": \"toast-top-right\",\n    //     \"preventDuplicates\": false,\n    //     \"onclick\": null,\n    //     \"showDuration\": \"300\",\n    //     \"hideDuration\": \"500000\",\n    //     \"timeOut\": \"500000\",\n    //     \"extendedTimeOut\": \"100000\",\n    //     \"showEasing\": \"swing\",\n    //     \"hideEasing\": \"linear\",\n    //     \"showMethod\": \"fadeIn\",\n    //     \"hideMethod\": \"fadeOut\"\n    // }\n    // toastr.success('We do have the Kapua suite available.', 'Success');\n    // toastr.warning('We do have the Kapua suite available.', 'Success')\n    // toastr.error('We do have the Kapua suite available.', 'Success')\n    // toastr.info('We do have the Kapua suite available.', 'Success')\n    $scope.changeTab = function(index) {\n        if ( index === 'back' ) {\n            if ( self.current_tab === 0){\n                return;\n            } else {\n                self.current_tab = self.current_tab - 1;\n                return;\n            }\n        } else if ( index === 'next' ) {\n            if ( self.current_tab === 2){\n                return;\n            } else {\n                self.current_tab = self.current_tab + 1;\n                return;\n            }\n        } else {\n            self.current_tab = index;\n        }\n    }\n    $scope.isActive = function(index) {\n        return self.current_tab === index;\n    }\n\tconst REMOVE = 0;\n\tconst ADD = 1;\n    let self = \tthis;\n    let functionCache = [];\n    let functionCacheSteps = {\n        training: {\n            status: true,\n            drop: null,\n        },\n        verify: {\n            status: true,\n            drop: null,\n        },\n        prediction: {\n            status: true,\n            drop: null,\n        },\n    }\n    this.$onInit = async function() {\n        console.log()\n        // $timeout(() => {\n            window.localStorage.setItem('__BASE_URL', 'https://api-1.i2g.cloud');\n        // })\n        wiApi.baseUrl = window.localStorage.getItem('__BASE_URL') || 'https://api-1.i2g.cloud';\n        self.loginUrl = 'https://users.i2g.cloud/login';\n        self.queryString = queryString.parse(location.search);\n        self.token = wiToken.getToken();\n        self.currentColor = 'rgb(6, 116, 218)';\n        self.currentFontSize = '12px';\n        self.showSomVisualize = false;\n        self.showDialogOpenMlProject = false;\n        self.currentSelectedMlProject = null;\n        self.mlProjectSelected = null;\n        self.mergeCurves = [];\n        self.selectionList = [{\n            data: {\n                label: '[no choose]'\n            },\n            properties: null\n        }];\n        self.model;\n        self.selectedModelProps = {};\n        self.current_tab = 0 ;\n        self.titleTabs = ['Dataset Selection','Model Selection','Training and Prediction'];\n        self.steps = ['training','prediction','verify'];\n        self.typeSelected = 'curve';\n        self.inputCurveSpecs = [\n            {\n                label: 'Input Curve',\n                value: null,\n                currentSelect: '[no choose]'\n            },\n            {\n                label: 'Input Curve',\n                value: null,\n                currentSelect: '[no choose]'\n        }];\n        self.targetCurveSpec = {\n            label: 'Target Curve',\n            value: null,\n            currentSelect: '[no choose]'\n        };\n        self.currentSelectedModel = '';\n        self.dataSomVisualize = {\n            distributionMaps: [{\n                \"header\": \"feature_0\",\n                'row': [{\"cells\": []}]\n            }],\n            visualizationMap: [{\"cells\": [{\n                    \"features\": [],\n                    \"label\": null\n                }]}]\n        }\n        self.machineLearnSteps = {\n            training: {\n                datasets: [],\n                selectionList: [],\n                // inputCurveSpecs: [],\n                target: true,\n                name: 'Train',\n                index: 0\n            },\n            verify: {\n                datasets: [],\n                selectionList: [],\n                // inputCurveSpecs: [],\n                target: true,\n                name: 'Verify',\n                index: 1\n            },\n            prediction: {\n                datasets: [],\n                selectionList: [],\n                // inputCurveSpecs: [],\n                target: false,\n                name: 'Predict',\n                index: 2\n            }\n        };\n        self.dataStepsForTrainPredict = angular.copy(self.machineLearnSteps);\n        self.stateWorkflow = {\n            state : -1, // -1 is nothing 0 was train 1 was verify, predict\n            waitResult: false,\n            model_id: null,\n            bucket_id: null\n        }\n        self.typeModelSelected = 'classification';\n        if(self.token && self.token.length) window.localStorage.setItem('token',self.token);\n    }\n    this.changeTheme = function (color){\n        $(\"body\").find(\".menu\").filter(function() {\n            return( $(this).css(\"background-color\") == self.currentColor );\n        }).css(\"background\", color);\n        self.currentColor = color;\n    }\n    this.changeFontSize = function (size){\n        $(\"body\").find(\"*\").filter(function() {\n            return( $(this).css(\"font-size\") == self.currentFontSize );\n        }).css(\"font-size\", size);\n        self.currentFontSize = size;\n    }\n\n    this.getFnOnInputChanged = function($index) {\n        if (!functionCache[$index])\n            functionCache[$index] = function(selectedItemProps) {\n                self.inputCurveSpecs[$index].value = selectedItemProps;\n                if(selectedItemProps){\n                    self.inputCurveSpecs[$index].currentSelect = selectedItemProps.name;\n                }\n                else {\n                    self.inputCurveSpecs[$index].currentSelect = '[no choose]';\n                }\n                let handle = _.debounce(() => {\n                    for(let i in self.machineLearnSteps) {\n                     self.handleDropDatasets(i);\n                    }  \n                }, 500);\n                handle()\n            }\n        return functionCache[$index];\n    }\n    this.onTargetItemChanged = function(selectedItemProps){\n        self.targetCurveSpec.value = selectedItemProps;\n        if(selectedItemProps){\n            self.targetCurveSpec.currentSelect = selectedItemProps.name;\n        }else {\n            self.targetCurveSpec.currentSelect = '[no choose]';\n        }\n        let handle = _.debounce(() => {\n            for(let i in self.machineLearnSteps) {\n             self.handleDropDatasets(i);\n            }  \n        }, 500);\n        handle()\n    }\n\n    this.nnConfig = { inputs: [], outputs: [], layers: [], container: {}, nLayer: 2, layerConfig: [{label: 'label 0', value: 10}, {label: 'label 1', value: 10}] };\n    function updateNNConfig() {\n        self.nnConfig.inputs = self.inputCurveSpecs.map(i => {\n                                        return {\n                                                label: i.currentSelect,  \n                                                name: i.currentSelect, \n                                                value : i.currentSelect,\n                                                class: 'Input Curve',\n                                                type: \"1\"\n                                            }\n                                    });\n        self.nnConfig.outputs = [{\n                                    label: self.targetCurveSpec.currentSelect,\n                                    name: self.targetCurveSpec.currentSelect, \n                                    value: self.targetCurveSpec.currentSelect,\n                                    class: 'Target output',\n                                    type: \"1\"\n                                }]\n        self.nnConfig.layers = self.nnConfig.layerConfig.map(i => i.value);\n        $timeout(function () {\n            if(self.nnConfig.container.wiNNCtrl) {\n                console.log('update layers');\n                self.nnConfig.container.wiNNCtrl.update(self.nnConfig);                \n            }\n        });\n    }   \n    this.updateNNConfig = _.debounce(updateNNConfig);\n    setInterval(self.updateNNConfig(), 1000);\n    this.nnConfigNLayerChanged = function(nLayer) {\n        self.nnConfig.nLayer = nLayer;\n        let params = self.selectedModelProps.payload.params;\n        let layer = (params || []).find(i => {\n            return i.name === 'hidden_layer_sizes';\n        })\n        if(self.nnConfig.nLayer < self.nnConfig.layerConfig.length) {\n            layer.value.splice(self.nnConfig.nLayer, self.nnConfig.layerConfig.length - self.nnConfig.nLayer);\n            self.nnConfig.layerConfig.splice(self.nnConfig.nLayer, self.nnConfig.layerConfig.length - self.nnConfig.nLayer);\n        }else {\n            let oldLength = self.nnConfig.layerConfig.length;\n            for (let i = 0; i < self.nnConfig.nLayer - oldLength; i++) {\n                self.nnConfig.layerConfig.push({\n                    label: \"Layer \" + (oldLength + i),\n                    value: 10\n                });\n                layer.value.push(10);\n            }\n        }\n        self.updateNNConfig();\n    }\n    this.layerChange = function(index, value) {\n        let params = self.selectedModelProps.payload.params;\n        let layer = (params || []).find(i => {\n            return i.name === 'hidden_layer_sizes';\n        })\n        self.nnConfig.layerConfig[index].value = value;\n        layer.value[index] = value;\n        self.updateNNConfig();\n    }\n    this.updateLayer = function() {\n        if(self.selectedModelProps && self.selectedModelProps.nnnw  ) {\n            let params = self.selectedModelProps.payload.params;\n            let layer = (params || []).find(i => {\n                return i.name === 'hidden_layer_sizes';\n            })\n            if(layer.value) {\n                self.nnConfig.nLayer = layer.value.length;\n                self.nnConfig.layerConfig = layer.value.map((i, idx) => {\n                    return {label:'label ' + idx, value: i}\n                })\n            }else if(layer.example) {\n                self.nnConfig.nLayer = layer.example.length;\n                self.nnConfig.layerConfig = layer.example.map((i, idx) => {\n                    return {label:'label ' + idx, value: i}\n                })\n            }\n        } \n        self.updateNNConfig();\n    }\n\n    this.onRemoveInputItem = function($index) {\n        self.indexInputCurve = $index;\n        self.formatCurve = REMOVE;\n        if(self.inputCurveSpecs.length > 1){\n            self.inputCurveSpecs.splice($index,1);\n        }\n        let handle = _.debounce(() => {\n            for(let i in self.machineLearnSteps) {\n             self.handleDropDatasets(i,$index, REMOVE);\n            }  \n        }, 500);\n        handle()\n    }\n    this.onAddInputItem = function() {\n        console.log('add');\n        self.indexInputCurve = self.inputCurveSpecs.length - 1;\n        self.formatCurve = ADD;\n        self.inputCurveSpecs.push({\n            label: 'Input Curve',\n            value: null,\n            currentSelect: '[no choose]'\n        });\n        let handle = _.debounce(() => {\n            for(let i in self.machineLearnSteps) {\n             self.handleDropDatasets(i,self.inputCurveSpecs.length - 1, ADD);\n            }  \n        }, 500);\n        handle()\n    }\n    this.getFnDrop = function(step) {\n        if(!functionCacheSteps[step].drop) {\n            functionCacheSteps[step].drop = function(event,helper,datasets) {\n                $timeout(()=>{ \n                    for(let node of datasets) {\n                        let valueDataset = angular.copy(node);\n                        if (self.equals(self.machineLearnSteps[step].datasets,valueDataset) < 0 && valueDataset.idDataset && valueDataset.idWell) {\n                            self.machineLearnSteps[step].datasets = _.concat(self.machineLearnSteps[step].datasets, valueDataset);\n                            if(step == 'training') {\n                                self.mergeCurves.push(valueDataset.curves);\n                            }\n                        }\n                    }\n                    self.createSelectionList();\n                    var handle = _.debounce(() => {self.handleDropDatasets(step)}, 1000);  \n                    handle();\n                })\n            }\n        }\n        return functionCacheSteps[step].drop;\n    }\n    this.onRemoveDataset = function(step, $index) {\n        $timeout(() => {\n            self.machineLearnSteps[step].datasets = _.remove(self.machineLearnSteps[step].datasets, (dataset,index)=>{\n                if(step == 'training') {\n                    if(index === $index) {\n                        self.mergeCurves.splice(index,1);\n                    }\n                }\n                return index !== $index;\n            });\n            self.createSelectionList();\n            self.handleDropDatasets(step);\n        });\n    }\n    this.createSelectionList = function() {\n        var curves = _.intersectionBy(...self.mergeCurves,'name');\n        let selectionList = [{\n            data: {\n                label: '[no choose]'\n            },\n            properties: null\n        }];\n        switch(self.typeSelected) {\n            case 'family_curve': \n            \tconsole.log('run');\n                (async()=> {\n                    for(let curve of curves) {\n                        let familyCurve = await wiApi.getFamily(curve.idFamily);\n                        if(!familyCurve) break;\n                        let dataInformation = {\n                            data: {\n                                label : familyCurve.name \n                            },\n                            properties: {\n                                family_spec: familyCurve.familyCurve,\n                                name: familyCurve.name,\n                                idFamily: familyCurve.idFamily\n                            },\n                            icon: 'family-16x16'\n                        }\n                        selectionList.push(dataInformation);\n                    }\n                    selectionList = _.uniqBy(selectionList,'data.label');\n                    self.selectionList = angular.copy(selectionList);  \n                })();\n                break;\n            case 'main_family': \n                (async()=> {\n                    let familyGroups = [];\n                    for(let curve of curves) {\n                        let familyCurve = await wiApi.getFamily(curve.idFamily);\n                        if(!familyCurve) break;\n\n                        let dataInformation = {\n                            data: {\n                                label : familyCurve.familyGroup\n                            },\n                            properties: {\n                                familyGroup: familyCurve.familyGroup,\n                                name: familyCurve.familyGroup\n                            },\n                            icon: 'family-group-16x16'\n                        }\n                        selectionList.push(dataInformation);\n                    }\n                    selectionList = _.uniqBy(selectionList,'data.label');\n                    self.selectionList = angular.copy(selectionList);  \n                })();    \n                break;\n            default: \n\t            for(let curve of curves ) {\n\t                let dataInformation = {\n\t                    data: {\n\t                        label: curve.name\n\t                    },\n\t                    properties: {\n\t                        idFamily: curve.idFamily,\n\t                        type: curve.type,\n\t                        unit: curve.unit,\n\t                        name: curve.name\n\t                    },\n\t                    icon: 'curve-16x16'\n\t                }\n\t            \tselectionList.push(dataInformation);\n\t\t\t}\n            self.selectionList = angular.copy(selectionList);  \n        }  \n    }\n    this.handleDropDatasets = function(step,index = -1,type = null) {\n    \tlet datasetSource = Object.assign([], self.machineLearnSteps[step].datasets);\n    \tlet datasetDestination = Object.assign([], self.dataStepsForTrainPredict[step].datasets);\n    \tlet ds = _.intersectionBy(datasetDestination, datasetSource, 'idDataset');\n    \tlet ds1 = _.pullAllBy(datasetSource, ds, 'idDataset');\n    \tfor(let i in ds1) {\n            if(step != 'training') {\n                ds1[i].resultCurveName = ds1[i].patternCurveName = '_' + step.toUpperCase();\n            }\n            ds1[i].active = true;\n    \t\tds1[i]._selected = false;\n    \t}\n    \tself.dataStepsForTrainPredict[step].datasets = [...ds, ...ds1];\n    \thandleCreateSelectionList(self.dataStepsForTrainPredict[step],step ,index,type);\n        self.updateNNConfig();\n    }\n    function handleCreateSelectionList(dataStep, step, index = -1, type = null) {\n        let inputSpecs = [...self.inputCurveSpecs,self.targetCurveSpec];\n        let mergeCurves = [];\n        for(let dataset of dataStep.datasets) {\n            if(!dataset.inputCurveSpecs) {\n                // if(dataStep.target) {\n                //     dataset.inputCurveSpecs = new Array(self.inputCurveSpecs.length + 1);\n                // }else {\n                //     dataset.inputCurveSpecs = new Array(self.inputCurveSpecs.length);\n                // }\n                dataset.inputCurveSpecs = dataStep.target ? new Array(self.inputCurveSpecs.length + 1) : new Array(self.inputCurveSpecs.length);\n            } \n            if(index != -1 && type == ADD) {\n                if(dataStep.target) {\n                    dataset.inputCurveSpecs.splice(index,0,{\n                        label: 'Input Curve',\n                        value: null,\n                        currentSelect: '[no choose]'\n                    });\n                }else {\n                    dataset.inputCurveSpecs.splice(index,0,{\n                        label: 'Input Curve',\n                        value: null,\n                        currentSelect: '[no choose]'\n                    });\n                }\n            }\n            if(index != -1 && type == REMOVE) {\n                if(dataStep.target) {\n                    dataset.inputCurveSpecs.splice(index,1);\n                }else {\n                    dataset.inputCurveSpecs.splice(index,1);\n                }\n            }\n            mergeCurves.push(dataset.curves);\n        }\n        let curves = _.intersectionBy(...mergeCurves,'name');\n        // if(dataStep.selectionList) {\n        //     dataStep.selectionList = new Array(self.inputCurveSpecs.length + 1);\n        // }else {\n        //     dataStep.selectionList = new Array(self.inputCurveSpecs.length);\n        // }\n        dataStep.selectionList = dataStep.selectionList ? new Array(self.inputCurveSpecs.length + 1) : new Array(self.inputCurveSpecs.length);\n        if (step === 'training' && self.typeSelected === 'curve') {\n            for(let i = 0; i < dataStep.selectionList.length; i++) {\n                if(!dataStep.selectionList[i]) dataStep.selectionList[i] = [];\n                dataStep.selectionList[i] = [{\n                    data: {\n                        label: inputSpecs[i].currentSelect\n                    },\n                    properties: inputSpecs[i].value\n                }];\n            }\n        }else if(curves && curves.length) {\n             for(let curve of curves) {\n                let dataInformation = {     \n                    data: {\n                        label: curve.name\n                    },\n                    properties: {\n                        idFamily: curve.idFamily,\n                        type: curve.type,\n                        unit: curve.unit,\n                        name: curve.name\n                    },\n                    icon: 'curve-16x16'\n                }\n                switch(self.typeSelected) {\n                    case 'curve': \n                        for(let i = 0; i < dataStep.selectionList.length; i++) {\n                            if(!dataStep.selectionList[i]) dataStep.selectionList[i] = [{\n                                data: {\n                                    label: '[no choose]'\n                                },\n                                properties: null\n                            }];\n                            dataStep.selectionList[i].push(dataInformation);\n                        }\n                    break;\n                    case 'family_curve':\n                        for(let i = 0; i < dataStep.selectionList.length; i++) {\n                            if(!dataStep.selectionList[i]) dataStep.selectionList[i] = [{\n                                data: {\n                                    label: '[no choose]'\n                                },\n                                properties: null\n                            }];\n                            if((curve.idFamily == (inputSpecs[i].value || {}).idFamily ) && curve.idFamily ) dataStep.selectionList[i].push(dataInformation);\n                        }\n                    break;\n                    case 'main_family':\n                        (async() => {\n                            try{\n                                let mainFamily = await wiApi.getFamily(curve.idFamily);\n                                if(mainFamily) {\n                                    for(let i = 0; i < dataStep.selectionList.length; i++) {\n                                        if(!dataStep.selectionList[i]) dataStep.selectionList[i] = [{\n                                            data: {\n                                                label: '[no choose]'\n                                            },\n                                            properties: null\n                                        }];\n                                        if(mainFamily.familyGroup == (inputSpecs[i].value || {}).familyGroup ) dataStep.selectionList[i].push(dataInformation);\n                                    }   \n                                }\n                            }catch(e) {\n                                console.log(e);\n                            }\n                        })();\n                    break;\n                }\n            }\n        }else {\n            for(let i = 0; i < dataStep.selectionList.length; i++) {\n                if(!dataStep.selectionList[i]) dataStep.selectionList[i] = [{\n                    data: {\n                        label: '[no choose]'\n                    },\n                    properties: null\n                }];\n            }\n        }\n\n        for(let dataset of dataStep.datasets) {\n            if(step === 'training' && self.typeSelected === 'curve') {\n                dataset.inputCurveSpecs = angular.copy(inputSpecs);\n            }else {\n                for(let i = 0; i < dataset.inputCurveSpecs.length; i++) {\n                    if(!dataset.inputCurveSpecs[i]) {\n                        dataset.inputCurveSpecs[i] = {\n                            label: 'Input Curve',\n                            value: null,\n                            currentSelect: '[no choose]'\n                        }\n                    }else {\n                        if(dataStep.selectionList[i]) {\n                            let input = dataStep.selectionList[i].find(d => {\n                                return dataset.inputCurveSpecs[i].currentSelect === d.data.label;\n                            });\n                            if(!input) {\n                                dataset.inputCurveSpecs[i] = {\n                                    label: 'Input Curve',\n                                    value: null,\n                                    currentSelect: '[no choose]'\n                                }\n                                dataset.resultCurveName = dataset.patternCurveName;\n                            } \n                        }\n                    }\n                }   \n            }\n        }\n    }\n    this.onChangeType = function(button) {\n        self.typeSelected = button.type;\n        for(let index in self.inputCurveSpecs) {\n            self.inputCurveSpecs[index]= {\n                label: 'Input Curve',\n                value: null,\n                currentSelect: '[no choose]'\n            }\n        }\n        self.targetCurveSpec = {\n                label: 'Target Curve',\n                value: null,\n                currentSelect: '[no choose]'\n            }\n        self.createSelectionList();\n        for(let i in self.machineLearnSteps) {\n            self.handleDropDatasets(i);\n        }\n    }\n    this.equals = function(arrayData, data){\n        for(let i in arrayData) {\n            if(arrayData[i].idDataset == data.idDataset) return i;\n        }\n        return -1;\n    }\n\n    this.setStateWorkflow = function(state) {\n        self.stateWorkflow.state = state;\n    }\n    this.setTypeModelSelected = function(type) {\n        self.typeModelSelected = type;\n    }\n    this.openMlProject = function() {\n        self.showDialogOpenMlProject = true;\n        wiApi.getMlProjectListPromise()\n        .then((listMlProject) => {\n            $timeout(() => {\n                self.listMlProject = listMlProject;            \n            })\n        });\n    }\n    this.saveMlProject = function() { \n        if(self.mlProjectSelected) {\n            saveWorkflow();\n            // self.showNotiSave = true;\n            wiApi.editMlProjectPromise({\n                name: self.mlProjectSelected.name,\n                idMlProject: self.mlProjectSelected.idMlProject,\n                content: self.workflow\n            })\n            .then((mlProject)=>{\n                toastr.success('Save machine learning project success', 'Success');\n                // $timeout(()=>{\n                //     self.showNotiSave = false;\n                // },1000)\n            })\n            .catch((err) => {\n                toastr.error('Save machine learning project fail', 'Error');\n            })\n        }else {\n            self.showDialogSaveMlProject = true;\n        }\n    }\n    this.onClickButtonOpen = async function(mlProject) {\n        if(!mlProject) return;\n        console.log(mlProject);\n        self.mlProjectSelected = mlProject;\n        self.mlNameProject = mlProject.name;\n        self.showDialogOpenMlProject = false;\n        if(self.mlProjectSelected) {\n            $timeout(async() => {\n                self.sprinnerMl = true;\n                self.mergeCurves = [];\n                self.currentSelectedModel = '';\n                self.machineLearnSteps = {\n                    training: {\n                        datasets: [],\n                        selectionList: [],\n                        target: true,\n                        name: 'Train',\n                        index: 0\n                    },\n                    verify: {\n                        datasets: [],\n                        selectionList: [],\n                        target: true,\n                        name: 'Verify',\n                        index: 1\n                    },\n                    prediction: {\n                        datasets: [],\n                        selectionList: [],\n                        target: false,\n                        name: 'Predict',\n                        index: 2\n                    }\n                };\n                self.dataStepsForTrainPredict = angular.copy(self.machineLearnSteps);\n                let content = self.mlProjectSelected.content;\n                self.currentSelectedMlProject = self.mlProjectSelected.name;\n                for(let i in content.steps) {\n                    for(let j in content.steps[i].datasets) {\n                        // let dataset = await wiApi.getDatasetInfoPromise(content.steps[i].datasets[j].idDataset);\n                        let dataset = await wiApi.getDatasetInfoPromise(content.steps[i].datasets[j].idDataset);\n                        let valueDataset = angular.copy(dataset);\n                            if (self.equals(self.machineLearnSteps[i].datasets, valueDataset) < 0 && valueDataset.idDataset && valueDataset.idWell) {\n                                self.machineLearnSteps[i].datasets = _.concat(self.machineLearnSteps[i].datasets, valueDataset);\n                                if(i == 'training') {\n                                    self.mergeCurves.push(valueDataset.curves);\n                                }\n                            }\n                        let valueDatasetTrainPredict = angular.copy(dataset);\n                        let cacheDataset = content.steps[i].datasets.find(d => {\n                            return valueDatasetTrainPredict.idDataset === d.idDataset;\n                        })\n                        if(cacheDataset) {\n                            valueDatasetTrainPredict.inputCurveSpecs = cacheDataset.inputCurveSpecs;\n                            valueDatasetTrainPredict.resultCurveName = cacheDataset.resultCurveName;\n                            valueDatasetTrainPredict.patternCurveName = '_' + i.toUpperCase();\n                            valueDatasetTrainPredict.active = cacheDataset.active;\n                            valueDatasetTrainPredict.discrmnt = cacheDataset.discrmnt;\n                            valueDatasetTrainPredict.wellName = cacheDataset.wellName;\n                            self.dataStepsForTrainPredict[i].datasets.push(valueDatasetTrainPredict)\n                        }\n                    }\n                }\n                self.typeSelected = content.type || 'curve';\n                self.inputCurveSpecs = content.inputCurveSpecs;\n                self.targetCurveSpec = content.targetCurveSpec;\n                self.createSelectionList();                    \n                self.typeModelSelected = content.model.type;\n                self.currentSelectedModel = content.model.label;\n                // self.modelSelectedProps = content.model;\n                // let props = Object.assign({}, {properties: self.modelSelectedProps}, {name: self.modelSelectedProps.label});\n                self.selectedModelProps = content.model;\n                self.selectedModelProps.sync = true;\n                console.log(self.selectedModelProps)\n                self.stateWorkflow = content.stateWorkflow;\n                // || {\n                // state : -1, \n                // waitResult: false,\n                // model_id: null,\n                // bucket_id: null\n                // };\n                if(self.stateWorkflow.model_id && (content.model.label === 'Supervise Som' || content.model.name === 'supervise_som' )) {\n                    $http({\n                        method: 'GET',\n                        url: `${content.model.url}/api/model/som/${self.stateWorkflow.model_id}`,\n                    })\n                    .then((res) => {\n                        console.log(res);\n                        if(res.status === 201) {\n                            $timeout(() => {\n                                self.dataSomVisualize = res.data;     \n                                self.showSomVisualize = true;                           \n                            })\n                        }\n                    });\n                }else {\n                    $timeout(() => {  \n                        self.showSomVisualize = false;                           \n                    })\n                }\n                self.sprinnerMl  = false;\n                toastr.success('Open machine learning project success', 'Success');\n            });\n        }\n    }\n    this.createMlProject = function(name) {\n        console.log('save', name);\n        self.showDialogSaveMlProject = false;\n        saveWorkflow();\n        wiApi.createMlProjectPromise({\n            name: name,\n            content: self.workflow\n        })\n        .then((mlProject) => {\n            // if(!mlProject) return console.error(new Error(\"Don't create Ml Project\"))\n            toastr.success('Create machine learing project fail','Success')\n            $timeout(() => {\n                self.mlProjectSelected = mlProject;\n                self.currentSelectedMlProject = mlProject.name;\n            })\n        })\n        .catch((err) => {\n            toastr.error('Create machine learing project fail','Error')\n        })\n    }\n    this.newMlProject = function() {\n        $timeout(() => {\n            toastr.info('New machine learing project', 'Info');\n            $scope.nameMlProject = 'new project';\n            self.mlNameProject = null;\n            // self.currentSelectedModel = '';\n            self.currentSelectedMlProject = null;\n            self.dataSomVisualize = {\n                distributionMaps: [{\n                    \"header\": \"feature_0\",\n                    'row': [{\"cells\": []}]\n                }],\n                visualizationMap: [{\"cells\": [{\n                        \"features\": [],\n                        \"label\": null\n                    }]}]\n            }\n            self.machineLearnSteps = {\n                training: {\n                    datasets: [],\n                    selectionList: [],\n                    target: true,\n                    name: 'Train',\n                    index: 0\n                },\n                verify: {\n                    datasets: [],\n                    selectionList: [],\n                    target: true,\n                    name: 'Verify',\n                    index: 1\n                },\n                prediction: {\n                    datasets: [],\n                    selectionList: [],\n                    target: false,\n                    name: 'Predict',\n                    index: 2\n                }\n            };\n            self.dataStepsForTrainPredict = angular.copy(self.machineLearnSteps);\n            self.stateWorkflow = {\n                state : -1,\n                waitResult: false,\n                model_id: null,\n                bucket_id: null\n            }\n            self.mlProjectSelected = null;\n            self.showSomVisualize = false;\n            // self.selectedModelProps.name = self.model.classification[0].name;\n            self.selectedModelProps = self.model.classification[0].properties;\n            self.typeModelSelected = 'classification';\n            self.currentSelectedModel = self.model.classification[0].properties.label;\n            self.inputCurveSpecs = [\n                {\n                    label: 'Input Curve',\n                    value: null,\n                    currentSelect: '[no choose]'\n                },\n                {\n                    label: 'Input Curve',\n                    value: null,\n                    currentSelect: '[no choose]'\n            }];\n            self.targetCurveSpec = {\n                label: 'Target Curve',\n                value: null,\n                currentSelect: '[no choose]'\n            };\n            self.typeSelected = 'curve';\n            self.nnConfig = { inputs: [], outputs: [], layers: [], container: {}, nLayer: 2, layerConfig: [{label: 'label 0', value: 10}, {label: 'label 1', value: 10}] };\n            self.updateNNConfig();\n        })\n    }\n    this.setModelId = function(modelId) {\n        self.stateWorkflow.model_id = modelId;\n    }\n    this.setBucketId = function(bucketId) {\n        self.stateWorkflow.bucket_id = bucketId;\n    }\n    this.setPropsModel = function(data) {\n       self.model = data;\n    }\n    function saveWorkflow() {\n        let steps = angular.copy(self.dataStepsForTrainPredict); \n        for(let i in steps) {\n            steps[i].datasets = steps[i].datasets.map(d => {\n                return {\n                    inputCurveSpecs: d.inputCurveSpecs,\n                    idDataset: d.idDataset,\n                    name: d.name,\n                    resultCurveName: d.resultCurveName,\n                    active: d.active,\n                    discrmnt: d.discrmnt,\n                    wellName: d.wellName\n                }\n            })\n        }\n        let model = self.selectedModelProps;\n        let inputCurveSpecs = self.inputCurveSpecs.map(i => {\n            return i\n        })\n        let targetCurveSpec = self.targetCurveSpec;\n        //create content to post server\n        self.workflow = {\n            inputCurveSpecs: inputCurveSpecs,\n            targetCurveSpec: targetCurveSpec,\n            type: self.typeSelected,\n            model: model,\n            stateWorkflow: self.stateWorkflow,\n            steps: steps\n        }\n    }\n    self.selectItemDelete = function($index) {\n        self.delProject = true;\n        self.indexItemDelete = $index;\n    }\n    self.confirmDeleteItemMlProject = function() {\n        console.log(self.indexItemDelete)\n        if(self.indexItemDelete > -1 ) {\n            let id = self.listMlProject[self.indexItemDelete].idMlProject;\n            wiApi.deleteMlProjectPromise(id)\n            .then((res) => {\n                toastr.success('Delete \"' + res.name + '\" Project Success', 'Success');\n                _.remove(self.listMlProject, (d, i) => {\n                    return i === self.indexItemDelete;\n                });\n                if(self.mlProjectSelected && id === self.mlProjectSelected.idMlProject) {\n                    self.newMlProject();\n                }\n            })\n            .catch((err) => {\n                toastr.error('Delete \"' + self.listMlProject[self.indexItemDelete].name + '\" Project Error', 'Error');\n            })\n            .finally(() => {\n                $timeout(() => {\n                    self.delProject = false;\n                    self.indexItemDelete = -1;\n                })\n            })\n        }\n    }\n\n    this.tab = 1;\n    this.setTab = function(idx) {\n        self.tab = idx;\n    }\n    this.onModelChanged = function(modelSelectedProps){\n        console.log(modelSelectedProps);\n        if(!modelSelectedProps) return;\n        self.selectedModelProps = self.selectedModelProps.sync ? self.selectedModelProps : modelSelectedProps;\n        self.selectedModelProps.sync = false;\n        self.currentSelectedModel = self.selectedModelProps.label;\n        console.log(self.selectedModelProps)\n        if(!self.selectedModelProps.nnnw) {\n            $timeout(() => {\n                self.tab = 1;\n            })\n            let element = document.getElementById(\"tab-layer\");\n            element.classList.add(\"hide\");\n            let changePosition = document.getElementById(\"model-selection\");\n            changePosition.classList.add(\"position-static\");\n        }else {\n            self.updateLayer();\n            let element = document.getElementById(\"tab-layer\");\n            element.classList.remove(\"hide\");\n            let changePosition = document.getElementById(\"model-selection\");\n            changePosition.classList.remove(\"position-static\");\n        }\n    }\n    let fnSetValue = {};\n    this.getFnSetValueElModel = function(type) {\n        if(type === 'params') {\n            if(!fnSetValue.params) {\n                fnSetValue.params = function(param, value) {\n                    console.log(param, value);\n                    let item = self.selectedModelProps.payload.params.find(i => {\n                        return i.name == param\n                    })\n                    value = validate(item.type, value);\n                    if(value === '') value = item.example;\n                    // this.itemValue = value;\n                    item.value = value;     \n                }\n            }\n            return fnSetValue.params;\n        }else {\n            if(!fnSetValue.train) {\n                fnSetValue.train = function(param, value) {\n                    console.log(param, value);\n                    let item = self.selectedModelProps.payload.train.find(i => {\n                        return i.name == param\n                    })\n                    value = validate(item.type, value);\n                    if(value === '') value = item.example;\n                    item.value = value;     \n                }\n            }\n            return fnSetValue.train;\n        }\n    }\n    let fnSetValueEnum = {\n        params: {},\n        train: {}\n    };\n    this.getFnSetValueElEnumModel = function(param, type) {\n        if(type === 'params') {\n            if(!fnSetValueEnum.params[param]) {\n                fnSetValueEnum.params[param] = function(props) {\n                    let item = self.selectedModelProps.payload.params.find(i => {\n                        return i.name == param\n                    })\n                    if(item) {\n                        item.value = props;\n                    }\n                    console.log(item, props, param);\n                }\n            }\n            return fnSetValueEnum.params[param];\n        }else {\n            if(!fnSetValueEnum.train[param]) {\n                fnSetValueEnum.train[param] = function(props) {\n                    let item = self.selectedModelProps.payload.train.find(i => {\n                        return i.name == param\n                    })\n                    if(item) {\n                        item.value = props;\n                    }\n                    console.log(item, props, param);\n                }\n            }\n            return fnSetValueEnum.train[param];\n        }\n    }\n    function validate(type, value) {\n        switch(type){\n            case 'string' : return value; \n\n            case 'integer': \n                value = Number(value);\n                if(Number.isInteger(value)) {\n                    return value;\n                }\n                return '';\n            case 'number':\n                value = Number(value);\n                if (!isNaN(value)) {\n                    return value;\n                }\n                return '';\n            case 'boolean':\n                if(value.toString().toLowerCase() == 'true') {\n                    // return 'true';\n                    return true;\n                }\n                if(value.toString().toLowerCase() == 'false') {\n                    // return 'false';\n                    return false;\n                }\n                return '';\n            default: return '';\n        }\n    }\n}\n\n//# sourceURL=webpack:///./machine-tabs/index.js?");

/***/ }),

/***/ "./machine-tabs/newstyle.less":
/*!************************************!*\
  !*** ./machine-tabs/newstyle.less ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./newstyle.less */ \"../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./machine-tabs/newstyle.less\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./machine-tabs/newstyle.less?");

/***/ }),

/***/ "./machine-tabs/newtemplate.html":
/*!***************************************!*\
  !*** ./machine-tabs/newtemplate.html ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div style=\\\"display: flex;flex-direction: column;flex: 1;\\\" class=\\\"slim-scroller\\\">\\n\\n\\t<div class=\\\"menu\\\">\\n\\t\\t<div class=\\\"active menu-item\\\">\\n\\t\\t\\t<span ng-if=\\\"self.currentSelectedMlProject\\\" ng-click=\\\"self.openMlProject();\\\" class=\\\"ml-project-name\\\">{{self.currentSelectedMlProject ? self.currentSelectedMlProject: ''}}</span>\\n\\t\\t\\t<div ng-click=\\\"self.openMlProject();\\\" style=\\\"align-items: center;display: flex; background: #ffffff40; padding: 5px 10px; border-radius: 2px;\\\">\\n\\t\\t\\t\\t<span  class=\\\"ml-open-16x16\\\" style=\\\"margin-right: 10px; filter: saturate(0) brightness(6)\\\"></span>\\n\\t\\t\\t\\t<span>OPEN</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div ng-click=\\\"self.saveMlProject();\\\" style=\\\"align-items: center;margin-left: 10px; display: flex; background: #ffffff40; padding: 5px 10px; border-radius: 2px;\\\">\\n\\t\\t\\t\\t<span  class=\\\"ml-save-16x16\\\" style=\\\"margin-right: 10px;filter: saturate(0) brightness(6)\\\"></span>\\n\\t\\t\\t\\t<span>SAVE</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div ng-click=\\\"self.newMlProject();\\\" style=\\\"align-items: center;margin-left: 10px;  display: flex; background: #ffffff40; padding: 5px 10px; border-radius: 2px;\\\">\\n\\t\\t\\t\\t<span  class=\\\"ml-new-16x16\\\" style=\\\"margin-right: 10px;filter: saturate(0) brightness(6)\\\"></span>\\n\\t\\t\\t\\t<span>NEW</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\t<div style=\\\"display: flex;\\\">\\n\\t\\t\\t\\n\\t\\t\\t<span ng-repeat=\\\"name in self.titleTabs track by $index\\\" class=\\\"menu-item\\\"\\n\\t\\t\\t\\tng-class=\\\"{active: self.current_tab === $index}\\\" ng-click=\\\"changeTab($index);\\\">{{name}}</span>\\n\\t\\t\\t\\t<span style=\\\"font-size: 15px;\\\" class=\\\"menu-item active ti ti-settings\\\" ng-click=\\\"self.userSetting=!self.userSetting\\\"></span>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"main\\\">\\n\\t\\t<div class=\\\"back\\\">\\n\\t\\t\\t<span class=\\\"ti ti-arrow-left\\\" ng-click=\\\"changeTab('back');\\\"></span>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"next\\\">\\n\\t\\t\\t<span class=\\\"ti ti-arrow-right\\\" ng-click=\\\"changeTab('next');\\\"></span>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"user-setting\\\" ng-class=\\\"{'show-user-setting':self.userSetting}\\\">\\n\\t\\t\\t<div style=\\\"position: absolute; right: 13px; top: -20px; z-index: 8; border: 10px solid transparent; border-bottom-color: #fff;\\\">\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"login\\\">\\n\\t\\t\\t\\t<wi-login id=\\\"custom-login-css\\\" register-url=\\\"https://www.i2g.cloud/register-information/\\\" app-name=\\\"Wi ML\\\"\\n\\t\\t\\t\\tlogin-url=\\\"{{self.loginUrl}}\\\" query-string=\\\"self.queryString\\\"></wi-login>\\n\\t\\t\\t</div>\\n\\t\\t\\t<!-- <div class=\\\"header\\\" >\\n\\t\\t\\t\\t<span class=\\\"title\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"ti ti-palette\\\" style=\\\"margin-right: 15px;\\\"></span>\\n\\t\\t\\t\\t\\tColor theme\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span class=\\\"sub\\\">Lorem Ipsum is simply dummy text of the printing</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"setting\\\" >\\n\\t\\t\\t\\t<div ng-click=\\\"self.changeTheme('rgb(6, 116, 218)')\\\">\\n\\t\\t\\t\\t\\t<svg class=\\\"color\\\" width=\\\"30\\\" height=\\\"30\\\">\\n\\t\\t\\t\\t\\t\\t<rect width=\\\"30\\\" height=\\\"30\\\" style=\\\"fill:rgb(6, 116, 218)\\\" />\\n\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div ng-click=\\\"self.changeTheme('rgb(65, 173, 245)')\\\">\\n\\t\\t\\t\\t\\t<svg class=\\\"color\\\" width=\\\"30\\\" height=\\\"30\\\">\\n\\t\\t\\t\\t\\t\\t<rect width=\\\"30\\\" height=\\\"30\\\" style=\\\"fill:rgb(65, 173, 245)\\\" />\\n\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t</div><div ng-click=\\\"self.changeTheme('rgb(78, 78, 78)')\\\">\\n\\t\\t\\t\\t\\t<svg class=\\\"color\\\" width=\\\"30\\\" height=\\\"30\\\">\\n\\t\\t\\t\\t\\t\\t<rect width=\\\"30\\\" height=\\\"30\\\" style=\\\"fill:rgb(78, 78, 78)\\\" />\\n\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t</div><div ng-click=\\\"self.changeTheme('rgb(82, 95, 222)')\\\">\\n\\t\\t\\t\\t\\t<svg class=\\\"color\\\" width=\\\"30\\\" height=\\\"30\\\">\\n\\t\\t\\t\\t\\t\\t<rect width=\\\"30\\\" height=\\\"30\\\" style=\\\"fill:rgb(82, 95, 222)\\\" />\\n\\t\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"header\\\" style=\\\"margin-top: 20px;\\\">\\n\\t\\t\\t\\t<span class=\\\"title\\\" style=\\\"justify-content: space-between; align-items: center; margin-right: 0;\\\">\\n\\t\\t\\t\\t\\t<div style=\\\"display: flex; align-items: center;\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"ti ti-shortcode\\\" style=\\\"margin-right: 15px;\\\"></span>\\n\\t\\t\\t\\t\\t\\tTitle example\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<label class=\\\"switch\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" ng-checked=\\\"\\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"slider round\\\" ng-click=\\\"\\\"></span>\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span class=\\\"sub\\\">Lorem Ipsum is simply dummy text of the printing</span>\\n\\t\\t\\t</div> -->\\n\\t\\t\\t<div class=\\\"header\\\" style=\\\"margin-top: 20px;\\\">\\n\\t\\t\\t\\t<span class=\\\"title\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"ti ti-shortcode\\\" style=\\\"margin-right: 15px;\\\"></span>\\n\\t\\t\\t\\t\\tFont size\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t<span class=\\\"sub\\\">Lorem Ipsum is simply dummy text of the printing</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"font-size\\\">\\n\\t\\t\\t\\t<div ng-click=\\\"self.selectedFontSize = 10; self.changeFontSize('10px')\\\" ng-class=\\\"{'choose-font-size':self.selectedFontSize === 10}\\\"></div>\\n\\t\\t\\t\\t<div ng-click=\\\"self.selectedFontSize = 12; self.changeFontSize('12px')\\\" ng-class=\\\"{'choose-font-size':self.selectedFontSize === 12}\\\"></div>\\n\\t\\t\\t\\t<div ng-click=\\\"self.selectedFontSize = 14; self.changeFontSize('14px')\\\" ng-class=\\\"{'choose-font-size':self.selectedFontSize === 14}\\\"></div>\\n\\t\\t\\t\\t<div ng-click=\\\"self.selectedFontSize = 16; self.changeFontSize('16px')\\\" ng-class=\\\"{'choose-font-size':self.selectedFontSize === 16}\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"font-size\\\" style=\\\"background: none;\\\">\\n\\t\\t\\t\\t<span>10</span>\\n\\t\\t\\t\\t<span>12</span>\\n\\t\\t\\t\\t<span>14</span>\\n\\t\\t\\t\\t<span>16</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\\"about\\\">\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<model-selection id=\\\"model-selection\\\" ng-show=\\\"self.titleTabs[self.current_tab] === 'Model Selection'\\\"\\n\\t\\t\\tset-props-model=\\\"self.setPropsModel\\\" set-model-selected=\\\"self.setModelSelected\\\" nn-config=\\\"self.nnConfig\\\"set-layers=\\\"self.setLayers\\\" nn-config-n-layer-changed=\\\"self.nnConfigNLayerChanged\\\" nn-config=\\\"self.nnConfig\\\" layer-change=\\\"self.layerChange\\\" update-layer=\\\"self.updateLayer\\\" current-selected-model=\\\"self.currentSelectedModel\\\" type-model-selected=\\\"self.typeModelSelected\\\" set-type-model-selected=\\\"self.setTypeModelSelected\\\" on-model-changed=\\\"self.onModelChanged\\\" model-selected-props=\\\"self.selectedModelProps\\\" get-fn-set-value-el-model=\\\"self.getFnSetValueElModel\\\" tab=\\\"self.tab\\\" set-tab=\\\"self.setTab\\\" get-fn-set-value-el-enum-model=\\\"self.getFnSetValueElEnumModel\\\"\\n\\t\\t\\t></model-selection>\\n\\n\\t\\t<dataset-selection ng-show=\\\"self.titleTabs[self.current_tab] === 'Dataset Selection'\\\"\\n\\t\\t\\tid-project=\\\"self.idProject\\\" input-curve-specs=\\\"self.inputCurveSpecs\\\"\\n\\t\\t\\ttarget-curve-spec=\\\"self.targetCurveSpec\\\" machine-learn-steps=\\\"self.machineLearnSteps\\\" type-selected=\\\"self.typeSelected\\\" on-add-input-item=\\\"self.onAddInputItem\\\" get-fn-on-input-changed=\\\"self.getFnOnInputChanged\\\"\\n\\t\\t\\ton-target-item-changed=\\\"self.onTargetItemChanged\\\" on-remove-input-item=\\\"self.onRemoveInputItem\\\"\\n\\t\\t\\ton-change-type=\\\"self.onChangeType\\\" drop=\\\"self.getFnDrop\\\" selection-list=\\\"self.selectionList\\\" \\n\\t\\t\\tmerge-curves=\\\"self.mergeCurves\\\" make-selection-list=\\\"self.makeSelectionList\\\" \\n\\t\\t\\ton-remove-dataset=\\\"self.onRemoveDataset\\\"></dataset-selection>\\n\\n\\t\\t<training-prediction step-datas=\\\"self.dataStepsForTrainPredict\\\" input-curve-specs=\\\"self.inputCurveSpecs\\\"\\n\\t\\t\\ttarget-curve-spec=\\\"self.targetCurveSpec\\\" model=\\\"self.selectedModelProps\\\" state-workflow=\\\"self.stateWorkflow\\\" set-model-id=\\\"self.setModelId\\\" set-bucket-id=\\\"self.setBucketId\\\"\\n\\t\\t\\tng-show=\\\"self.titleTabs[self.current_tab] === 'Training and Prediction'\\\" som-visualize=\\\"self.dataSomVisualize\\\" show-som-visualize=\\\"self.showSomVisualize\\\" set-state=\\\"self.setStateWorkflow\\\"\\n\\t\\t\\tsave-ml-project=\\\"self.saveMlProject\\\"></training-prediction>\\n\\t\\t<wi-neural-network container=\\\"self.nnConfig.container\\\" input-curves=\\\"self.nnConfig.inputs\\\"\\n\\t\\t\\t\\t\\t\\t    output-curves=\\\"self.nnConfig.outputs\\\" \\n\\t\\t\\t\\t\\t\\t    hidden-layer=\\\"self.nnConfig.layers\\\"></wi-neural-network>\\n\\t</div>\\n</div>\\n<div ng-show=\\\"self.showDialogOpenMlProject\\\" style=\\\"z-index: 10; background: #00000052; position: absolute; width: 100vw; height: 100vh; display: flex; align-items: center; justify-content: center;\\\"> \\n\\t<div  class=\\\"body-dialog-ml slim-scroller\\\">\\n\\t\\t<div class=\\\"header-dl-ml\\\">\\n\\t\\t\\t<div class=\\\"confirm\\\" ng-if=\\\"self.delProject\\\">\\n\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\tDelete project?\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div style=\\\"display: flex\\\">\\n\\t\\t\\t\\t\\t<div ng-click=\\\"self.delProject=false;self.indexItemDelete=-1\\\"\\n\\t\\t\\t\\t\\t\\tstyle=\\\"margin-left: 12px; cursor: pointer; padding: 12px; font-weight: bold; color: #ffffff; letter-spacing: 1px; border-radius: 2px;\\\">\\n\\t\\t\\t\\t\\t\\tCANCEL\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div ng-click=\\\"self.confirmDeleteItemMlProject()\\\"\\n\\t\\t\\t\\t\\t\\tstyle=\\\"background: #ff988b; cursor: pointer; padding: 12px; font-weight: bold; color: #ffffff; letter-spacing: 1px; border-radius: 2px;\\\">\\n\\t\\t\\t\\t\\t\\tDELETE\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"header-dl-ml-title\\\">Open projects</div>\\n\\t\\t\\t<div style=\\\"display: flex; align-items: center;\\\">\\n\\t\\t\\t\\t<div class=\\\"search-project\\\">\\n\\t\\t\\t\\t\\t<input placeholder=\\\"Search\\\" ng-model=\\\"searchProject\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"new-project ti ti-plus\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"main-dl-ml\\\">\\n\\t\\t\\t<!-- <wi-dropdown-list place-holder=\\\"Machine learning project\\\" items=\\\"self.listMlProject\\\" hide-delete-button='false'\\n\\t\\t\\tcurrent-select='self.currentSelectedMlProject' on-item-changed=\\\"self.onItemMlProjectChange\\\"></wi-dropdown-list> -->\\n\\t\\t\\t<div ng-repeat=\\\"project in self.listMlProject | filter:searchProject track by $index\\\" \\n\\t\\t\\tng-class=\\\"{selectedProject: self.mlNameProject === project.name}\\\" \\n\\t\\t\\tng-click=\\\"self.mlProjectCache=project;self.mlNameProject=project.name;\\\"\\n\\t\\t\\tclass=\\\"item-list-of-dl\\\">\\n\\t\\t\\t\\t{{project.name}}\\n\\t\\t\\t\\t<div style=\\\"color: #9e9e9e;\\\" class=\\\"ti ti-close\\\" ng-click=\\\"self.selectItemDelete($index)\\\"></div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"footer-dl-ml\\\">\\n\\t\\t\\t<div class=\\\"footer-dl-ml-btn\\\" ng-click=\\\"self.showDialogOpenMlProject=false;self.mlNameProject=self.mlProjectSelected.name;self.delProject=false;self.indexItemDelete=-1\\\">CANCEL</div>\\n\\t\\t\\t<div class=\\\"footer-dl-ml-btn active\\\" ng-click=\\\"self.onClickButtonOpen(self.mlProjectCache)\\\">OPEN</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<div ng-show=\\\"self.sprinnerMl || self.showNotiSave\\\" style=\\\"z-index: 10; background: #ffffffc9; height: 100vh; width: 100vw; z-index: 5; position: absolute; display: flex; align-items: center; justify-content: center;\\\">\\n    <div >\\n        <div class=\\\"loader08\\\"></div>\\n    </div>\\n</div>\\n<div ng-show=\\\"self.showDialogSaveMlProject\\\" style=\\\"z-index: 10; background: #00000052; position: absolute; width: 100vw; height: 100vh; display: flex; align-items: center; justify-content: center;\\\"> \\n\\t<div  class=\\\"body-dialog-ml slim-scroller\\\">\\n\\t\\t<div class=\\\"header-dl-ml\\\" style=\\\"justify-content: flex-start;\\\">\\n\\t\\t\\t<div class=\\\"header-dl-ml-title\\\">Save projects</div>\\n\\t\\t</div> \\n\\t\\t<input ng-init=\\\"nameMlProject = 'new project'\\\" \\n\\t\\tautofocus\\n\\t\\tng-model=\\\"nameMlProject\\\" \\n\\t\\tstyle=\\\"margin: 20px 0; background: #efefef; line-height: 1; font-size: 12px; padding: 15px 20px; border-radius: 2px;\\\">\\n\\t\\t<div class=\\\"footer-dl-ml\\\">\\n\\t\\t\\t<div class=\\\"footer-dl-ml-btn\\\" ng-click=\\\"self.showDialogSaveMlProject=false;\\\">CANCEL</div>\\n\\t\\t\\t<div class=\\\"footer-dl-ml-btn active\\\" ng-click=\\\"self.createMlProject(nameMlProject)\\\">SAVE</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\";\n\n//# sourceURL=webpack:///./machine-tabs/newtemplate.html?");

/***/ }),

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n\tmachineTabs : __webpack_require__(/*! ./machine-tabs/index */ \"./machine-tabs/index.js\"),\n\tmodelSelection : __webpack_require__(/*! ./model-selection/index */ \"./model-selection/index.js\"),\n\tdatasetSelection : __webpack_require__(/*! ./dataset-selection/index */ \"./dataset-selection/index.js\"),\n\ttrainingPrediction : __webpack_require__(/*! ./training-prediction/index */ \"./training-prediction/index.js\"),\n}\n\n//# sourceURL=webpack:///./main.js?");

/***/ }),

/***/ "./model-selection/index.js":
/*!**********************************!*\
  !*** ./model-selection/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = \"modelSelection\";\nconst componentName = \"modelSelection\";\nmodule.exports.name = moduleName;\n\nconst dataJson = __webpack_require__(/*! ../../wi-uservice.json */ \"../wi-uservice.json\");\n\nvar app = angular.module(moduleName, ['wiDropdownList','editable']);\n\napp.component(componentName,{\n\ttemplate: __webpack_require__(/*! ./newtemplate.html */ \"./model-selection/newtemplate.html\"),\n    controller: ModelSelectionController,\n    style: __webpack_require__(/*! ./newstyle.less */ \"./model-selection/newstyle.less\"),\n    controllerAs: 'self',\n    bindings: {\n    \t// datas: '=',\n    \t// modelSelectedProps: '=',\n    \tupdateLayer: '<',\n    \tlayerChange: '<',\n    \tnnConfig: '<',\n    \tnnConfigNLayerChanged: '<',\n    \tsetPropsModel: '<',\n    \t// setModelSelected: '<',\n    \tcurrentSelectedModel: '<',\n    \ttypeModelSelected: '<',\n    \tsetTypeModelSelected: '<',\n    \tonModelChanged: '<',\n    \tmodelSelectedProps: '<',\n    \tgetFnSetValueElModel: '<',\n    \ttab: '<',\n    \tsetTab: '<',\n    \tgetFnSetValueElEnumModel: '<'\n    }\n});\n\nfunction ModelSelectionController($scope, $compile){\n\tlet self = \tthis;\n\tself.hideDeleteButton = false;\t\n\tthis.$onInit = function() {\n\t\tself.listType = [{\n\t\t\tdata: {\n\t\t\t\tlabel: 'classification'\n\t\t\t},\n\t\t\tproperties: 'classification'\n\t\t}, {\n\t\t\tdata: {\n\t\t\t\tlabel: 'regression'\n\t\t\t},\n\t\t\tproperties: 'regression'\n\t\t}];\n\t\t// self.modelSelectedProps = {};\n\t\tself.listModel = {\n\t\t\tregression: [],\n\t\t\tclassification: []\n\t\t}\n\t\tfor(let i in dataJson) {\n\t\t\tif(dataJson[i].type === 'classification') {\n\t\t\t\tself.listModel.classification.push({data: {label: dataJson[i].label}, properties: dataJson[i]});\n\t\t\t}else {\n\t\t\t\tself.listModel.regression.push({data: {label: dataJson[i].label}, properties: dataJson[i]});\n\t\t\t}\n\t\t}\n\t\tself.setPropsModel(self.listModel)\n\t}\n\t$scope.tab = self.tab;\n\tself.selectionTab = self.selectionTab || 'Train';\n\t$scope.setTab = function(newTab){\n\t\tself.tab = newTab;\n\t};\n\n\t$scope.isSet = function(tabNum){\n\t\treturn self.tab === tabNum;\n\t};\t\n}\n\n//# sourceURL=webpack:///./model-selection/index.js?");

/***/ }),

/***/ "./model-selection/newstyle.less":
/*!***************************************!*\
  !*** ./model-selection/newstyle.less ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./newstyle.less */ \"../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./model-selection/newstyle.less\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./model-selection/newstyle.less?");

/***/ }),

/***/ "./model-selection/newtemplate.html":
/*!******************************************!*\
  !*** ./model-selection/newtemplate.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<div class=\\\"main-content slim-scroller\\\" style=\\\"width: 315px;\\\">\\n    <div class=\\\"input-selection\\\">\\n        <div class=\\\"tab\\\">\\n            <div class=\\\"tab-button\\\" ng-class=\\\"{'active' : self.tab===1}\\\" ng-click=\\\"self.setTab(1)\\\">Model Selection</div>\\n            <div id=\\\"tab-layer\\\" class=\\\"tab-button\\\" ng-class=\\\"{'active' : self.tab===2}\\\" ng-click=\\\"self.setTab(2)\\\">Neural Network</div>\\n        </div>\\n        <div ng-show=\\\"isSet(1)\\\" style=\\\"padding: 20px; height: 100%;\\\" onmouseover=this.style.overflow='overlay' onmouseout=this.style.overflow='hidden'>\\n            <div class=\\\"header\\\" style=\\\"text-transform: capitalize;\\\">\\n                <span class=\\\"title\\\">Type Selection</span>\\n                <wi-dropdown-list place-holder=\\\"Type\\\" items=\\\"self.listType\\\" hide-delete-button='self.hideDeleteButton'\\n                    current-select='self.typeModelSelected' on-item-changed=\\\"self.setTypeModelSelected\\\">\\n                </wi-dropdown-list>\\n            </div>\\n            <div class=\\\"header\\\">\\n                <span class=\\\"title\\\">Model Selection</span>\\n                <wi-dropdown-list ng-if=\\\"self.typeModelSelected==='classification'\\\" place-holder=\\\"Model\\\" items=\\\"self.listModel.classification\\\" hide-delete-button='self.hideDeleteButton'\\n                    current-select='self.currentSelectedModel' on-item-changed=\\\"self.onModelChanged\\\">\\n                </wi-dropdown-list>\\n                <wi-dropdown-list ng-if=\\\"self.typeModelSelected!=='classification'\\\" place-holder=\\\"Model\\\" items=\\\"self.listModel.regression\\\" hide-delete-button='self.hideDeleteButton'\\n                    current-select='self.currentSelectedModel' on-item-changed=\\\"self.onModelChanged\\\">\\n                </wi-dropdown-list>\\n            </div>\\n            \\n            <div >\\n                <div class=\\\"editable-custom\\\" ng-repeat=\\\"(key, props) in self.modelSelectedProps.payload.params\\\" ng-init=\\\"props.value = props.value === undefined ? props.example : props.value\\\"> \\n                    <editable ng-if=\\\"props.type!='List'\\\" item-value=\\\"props.value\\\" item-label=\\\"props.name\\\"\\n                        label-style=\\\"{'min-width':'130px'}\\\" enabled=\\\"true\\\" set-value=\\\"self.getFnSetValueElModel('params')\\\"\\n                        params=\\\"props.name\\\" ng-if=\\\"props.type != 'array'\\\">\\n                    </editable>\\n                    <div class=\\\"header\\\" ng-if=\\\"props.type=='List'\\\" style=\\\"margin: 10px 0; border-bottom: 1px solid #dadada;\\\">\\n                        <span class=\\\"title\\\" style=\\\"font-size: 13px;\\\">{{props.name}}</span>\\n                        <span class=\\\"sub\\\" style=\\\"margin-bottom: 10px;\\\">{{props.value}}</span>\\n                    </div>\\n                </div>\\n                <div ng-if=\\\"self.modelSelectedProps.payload.train\\\" class=\\\"header\\\" style=\\\"margin-top: 20px;\\\">\\n                    <span class=\\\"title\\\">Advance</span>\\n                    <span class=\\\"sub\\\">Lorem Ipsum is simply dummy text of the printing</span>\\n                </div>\\n                <div ng-if=\\\"self.modelSelectedProps.payload.train\\\" class=\\\"editable-custom\\\" ng-repeat=\\\"(key, props) in self.modelSelectedProps.payload.train\\\" ng-init=\\\"props.value = props.value === undefined ? props.example : props.value\\\">\\n                   <editable item-value=\\\"props.value\\\" item-label=\\\"props.name\\\"\\n                       label-style=\\\"{'min-width':'130px'}\\\" enabled=\\\"true\\\" set-value=\\\"self.getFnSetValueElModel('train')\\\"\\n                       params=\\\"props.name\\\" ng-if=\\\"props.type != 'array' && props.type != 'List' && props.type != 'enum' \\\">\\n                   </editable>\\n                   <div ng-if=\\\" props.type == 'enum' \\\" style=\\\"margin-top: 15px;\\\">\\n                       <div style=\\\"font-weight: bold;\\\">\\n                           {{props.name}}\\n                       </div>\\n                        <div>\\n                            <wi-dropdown-list place-holder=\\\"value\\\" items=\\\"props.enum\\\" current-select='props.value\\n                            || props.example' on-item-changed=\\\"self.getFnSetValueElEnumModel(props.name, 'train')\\\">\\n                            </wi-dropdown-list>\\n                        </div>\\n                   </div>\\n               </div>\\n            </div>\\n        </div>\\n        <div ng-show=\\\"isSet(2)\\\" style=\\\"padding: 20px; overflow: hidden;\\\">\\n            <div class=\\\"hidden-layers\\\">\\n                <div class=\\\"add ti ti-minus\\\" ng-click=\\\"self.nnConfig.nLayer = self.nnConfig.nLayer - 1; self.nnConfigNLayerChanged(self.nnConfig.nLayer)\\\"></div>\\n                <input class=\\\"inputs\\\" ng-model='self.nnConfig.nLayer'  class=\\\"form-control wi-form-control\\\" ng-change=\\\"self.nnConfigNLayerChanged(self.nnConfig.nLayer)\\\" min=\\\"1\\\">\\n                <div class=\\\"remove ti ti-plus\\\" ng-click=\\\"self.nnConfig.nLayer = self.nnConfig.nLayer + 1; self.nnConfigNLayerChanged(self.nnConfig.nLayer)\\\"></div>\\n            </div>\\n            <div style=\\\"height: 100%;\\\" onmouseover=this.style.overflow='auto' onmouseout=this.style.overflow='hidden'>\\n                <div ng-repeat=\\\"layer in self.nnConfig.layerConfig track by $index\\\" class=\\\"input-number\\\">\\n                    <div style=\\\"display: flex; align-items: center;\\\">\\n                        <div class=\\\"layer-16x16\\\" style=\\\"margin-right: 10px; min-width: 16px;\\\"></div>\\n                        <div class=\\\"name\\\">{{layer.label}}</div>\\n                        <input style=\\\"font-weight: bold;\\\" class=\\\"form-control wi-form-control\\\" ng-model=\\\"layer.value\\\" ng-change=\\\"self.layerChange(layer, layer.value)\\\" min=\\\"1\\\">\\n                    </div>\\n                    <div style=\\\"display: flex;\\\">\\n                        <div class=\\\"add ti ti-minus\\\" ng-click=\\\"layer.value = layer.value - 1; self.layerChange($index, layer.value)\\\"></div>\\n                        <div class=\\\"remove ti ti-plus\\\" ng-click=\\\"layer.value = layer.value + 1; self.layerChange($index, layer.value)\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"header\\\">\\n                Hidden Layers\\n                <input ng-model='self.nnConfig.nLayer' type=\\\"number\\\" ng-change=\\\"self.nnConfigNLayerChanged(self.nnConfig.nLayer)\\\" min=\\\"1\\\">\\n            </div>\\n            <div class=\\\"header\\\">\\n                <div ng-repeat=\\\"layer in self.nnConfig.layerConfig track by $index\\\">\\n                    <span>{{layer.label}}</span>\\n                    <input class=\\\"form-control wi-form-control\\\" ng-model=\\\"layer.value\\\" type=\\\"number\\\" ng-change=\\\"self.layerChange(layer, layer.value)\\\" min=\\\"1\\\">\\n                </div>\\n            </div> -->\\n        </div>\\n        <!-- <div ng-show=\\\"isSet(3)\\\" style=\\\"padding: 20px;\\\">\\n            \\n        </div> -->\\n    </div>\\n    <div id=\\\"workspace\\\" class=\\\"workspace\\\">\\n        \\n    </div>\\n</div>\";\n\n//# sourceURL=webpack:///./model-selection/newtemplate.html?");

/***/ }),

/***/ "./training-prediction/index.js":
/*!**************************************!*\
  !*** ./training-prediction/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const moduleName = \"trainingPrediction\";\nconst componentName = \"trainingPrediction\";\nmodule.exports.name = moduleName;\n\nvar config = __webpack_require__(/*! ../config/config.js */ \"./config/config.js\");\nvar app = angular.module(moduleName, ['wiDialog',\n\t'wiDiscriminator',\n\t'wiApi',  \n\t'distributionMapModule',\n  \t'visualizationMapModule',\n  \t'somModelService']);\n\napp.component(componentName,{\n\ttemplate: __webpack_require__(/*! ./newtemplate.html */ \"./training-prediction/newtemplate.html\"),\n    controller: TrainingPredictionController,\n    style: __webpack_require__(/*! ./newstyle.less */ \"./training-prediction/newstyle.less\"),\n    controllerAs: 'self',\n    bindings: {\n    \tstepDatas: '<',\n    \tinputCurveSpecs: '<',\n        targetCurveSpec: '<',\n        model: '<',\n        stateWorkflow: '<',\n        setModelId: '<',\n        setBucketId: '<',\n        somVisualize: '<',\n        showSomVisualize: '<',\n\t\tsetState: '<',\n\t\tsaveMlProject: '<'\n    }\n});\nfunction TrainingPredictionController($scope, $timeout, wiDialog, wiApi, $http, somModelService){\n\tlet self = this;\n\tconst TRAIN_STEP_NAME = 'Train';\n    const VERIFY_STEP_NAME = 'Verify';\n    const PREDICT_STEP_NAME = 'Predict';\n\n    const TRAIN_STEP_STATE = 'training';\n    const VERIFY_STEP_STATE = 'verify';\n    const PREDICT_STEP_STATE = 'prediction';\n\n    const ML_TOOLKIT = 'curve';\n    const ML_TOOLKIT_CLASSIFICATION = 'classification';\n\t// const BASE_ML_URL = 'http://192.168.0.120:5001/api';\n\t //--------------\n\t$scope.tab = 1;\n\tself.selectionTab = self.selectionTab || 'Wells';\n\n\t$scope.setTab = function(newTab) {\n\t $scope.tab = newTab;\n\t};\n\n\t$scope.isSet = function(tabNum) {\n\t return $scope.tab === tabNum;\n\t};\n\t //--------------\n\n    this.model_id = null;\n\tthis.onDiscriminator = function(dataset) {\n\t\t// console.log(dataset.curves);\n\t\twiDialog.discriminator(dataset.discrmnt, dataset.curves, function(res) {\n\t\t\tdataset.discrmnt = res;\n\t\t\tconsole.log(res);\n\t\t})\n\t}\n\tthis.running = false;\n\tthis.runTask = runTask;\n\tlet functionCache = {\n\t\ttraining: {},\n\t\tverify: {},\n\t\tprediction: {}\n\t}\n\t// this.showWapper = function () {\n\t// \tlet element = document.getElementById(\"wapper\");\n\t// \telement.classList.toggle(\"show\");\n\t// }\n\tthis.setItemOnChange = function(dataset, index, item) {\n\t\tconsole.log(dataset, index, item);\n\t\tif(dataset.inputCurveSpecs.length === index + 1 && dataset.patternCurveName && dataset.patternCurveName !== '_PREDICTION') {\n\t\t\tdataset.resultCurveName = item.data.label.toUpperCase() !== '[NO CHOOSE]' ? item.data.label.toUpperCase() + dataset.patternCurveName : dataset.patternCurveName ;\n\t\t}\n\t\tdataset.inputCurveSpecs[index].value = item.properties;\n\t\tdataset.inputCurveSpecs[index].currentSelect = item.data.label;\n\t}\n\n\tfunction postPromise(url, data, method) {\n        return new Promise(function(resolve, reject) {\n            $http({\n                method: method,\n                url: url,\n                data: data,\n            }).then((response) => {\n            \t// console.log(response);\n                if (response.status === 200) resolve(response.data);\n                if (response.status === 201) resolve(response.data);\n                else reject(new Error(response.data.reason));\n            }, (err) => {\n            \tif(err.status === 400 && err.data.status === 'existed') {\n            \t\tresolve({existed : true});\n            \t}\n                reject(err);\n            })\n        });\n    }\n\n    function getSomVisualize(model_id) {\n    \t// /model/som/\n    \treturn postPromise(`${self.model.url}/api/model/som/${model_id}`, {}, 'GET');\n    }\n\n    function postCreateModel(payload) {\n    \treturn postPromise(`${self.model.url}/api/model/create/${self.model.create}`, payload, 'POST');\n    }\n\n    function postCreateBucketId(payload) {\n    \treturn postPromise(`${self.model.url}/api/data`, payload ,'POST');\n    }\n\n    function putDataOfTrain(payload) {\n    \treturn postPromise(`${self.model.url}/api/data`, payload, 'PUT');\n    }\n\n    function postTrainByBucketData(payload) {\n    \treturn postPromise(`${self.model.url}/api/model/train_by_bucket_data`, payload,'POST');\n    }\n\n    function postPredict(payload) {\n    \treturn postPromise(`${self.model.url}/api/model/predict`, payload, 'POST');\n    }\n\n    function getBucket() {\n    \treturn postPromise(`${self.model.url}/api/bucket/list`, {}, 'GET');\n    }\n\n\tfunction runTask(step) {\n\t\tself.running = true;\n\t\tswitch(step) {\n\t\t\tcase 0: \n\t\t\t\ttrain()\n\t\t\t\t.then(data => {\n\t\t\t\t\tconsole.log('run',step, data);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.error(err)\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\t$timeout(() => {\n\t\t\t\t\t\tself.running = false;\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\tbreak;\t\t\t\t\n\t\t\tcase 1:\n\t\t\t\tverify()\n\t\t\t\t.then(() => {\n\t\t\t\t\tconsole.log('run',step);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.error(err)\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\t$timeout(() => {\n\t\t\t\t\t\tself.running = false;\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\tbreak;\t\n\t\t\tcase 2:\n\t\t\t\tprediction()\n\t\t\t\t.then(() => {\n\t\t\t\t\tconsole.log('run',step);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.error(err)\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\t$timeout(() => {\n\t\t\t\t\t\tself.running = false;\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction train() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif(!self.stepDatas[TRAIN_STEP_STATE].datasets.length) {\n\t\t\t\ttoastr.error('Dataset is not none', 'Error');\n\t\t\t\treturn reject(new Error('Please drop dataset'))\t\t\t\t\n\t\t\t} \n\t\t\tcreateModelAndBucketId()\n\t\t\t.then((res) => {\n\t\t\t\tasync.each(self.stepDatas[TRAIN_STEP_STATE].datasets, function(dataset, _cb) {\n\t\t\t\t\tif(!isRun(dataset)) {\n\t\t\t\t\t\ttoastr.error('Curve in dataset is not [no choose]', 'Error');\n\t\t\t\t\t\treturn reject(new Error('Please select curve for dataset'));\n\t\t\t\t\t}\n\t\t\t\t\tevaluateExpr(dataset,dataset.discrmnt)\n\t\t\t\t\t.then((curves) => {\n\t\t\t\t\t\tgetDataCurveAndFilter(dataset, curves).then(async (dataCurves) => {\n\t\t\t\t\t\t\tlet payload = {\n\t\t\t\t\t\t\t\tbucket_id: self.bucket_id,\n\t\t\t\t\t\t\t\tdata: dataCurves\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tputDataOfTrain(payload)\n\t\t\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\t\t\t_cb();\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t});\n\t\t\t\t}, async function(err) {\n\t\t\t\t\tif(err) {\n\t\t\t\t\t\treject(err)\n\t\t\t\t\t}\n\t\t\t\t\tlet request = createPayloadForTrain();\n\t\t\t\t\tpostTrainByBucketData(request)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\tdoAfterTrain();\n\t\t\t\t\t\tself.saveMlProject();\n\t\t\t\t\t\ttoastr.success('Train success', 'Success');\n\t\t\t\t\t\tresolve(res);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\ttoastr.error('Training fail', 'Error');\n\t\t\t\t\t\treject(err)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\treject(err)\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction verify() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// if(self.stateWorkflow.state === -1 ) reject(new Error('Please train before verify'));\n\t\t\tif(!self.stepDatas[VERIFY_STEP_STATE].datasets) {\n\t\t\t\ttoastr.error('Dataset is not none', 'Error');\n\t\t\t\treturn reject(new Error('Please drop dataset'))\n\t\t\t}\n\t\t\tasync.each(self.stepDatas[VERIFY_STEP_STATE].datasets, function(dataset,_cb){\n\t\t\t\tif(!isRun(dataset)) {\n\t\t\t\t\ttoastr.error('Curve in dataset is not [no choose]', 'Error');\n\t\t\t\t\treturn reject(new Error('Please select curve for dataset'));\n\t\t\t\t}\n\t\t\t\tevaluateExpr(dataset, dataset.discrmnt)\n\t\t\t\t.then(function(curves) {\n\t\t\t\t\tgetDataCurveAndFilter(dataset, curves)\n\t\t\t\t\t.then(async function(dataCurves) {\n\t\t\t\t\t\tlet targetFilter = dataCurves.pop();\n\t\t\t\t\t\tlet payload = {\n\t\t\t\t\t\t\tfeatures: dataCurves,\n\t\t\t\t\t\t\tmodel_id: self.model_id\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// let dataVerify = await postPredict(payload);\n\t\t\t\t\t\tpostPredict(payload)\n\t\t\t\t\t\t.then((dataVerify) => {\n\t\t\t\t\t\t\thandleResultVerify(dataset, dataVerify)\n\t\t\t\t\t\t\t.then(newCurve => {\n\t\t\t\t\t\t\t\tconsole.log(newCurve);\n\t\t\t\t\t\t\t\ttoastr.success('Create new curve success', 'Success');\n\t\t\t\t\t\t\t\t_cb();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\t\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\ttoastr.error('Some thing went wrong', 'Error');\n\t\t\t\t\t_cb(err);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t},err => {\n\t\t\t\tif(err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t};\n\t\t\t\tself.saveMlProject();\n\t\t\t\tresolve();\t\n\t\t\t});\n\t\t})\n\t}\n\n\tfunction prediction() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// if(self.stateWorkflow.state === -1 ) reject(new Error('Please train before prediction'));\n\t\t\tif(!self.stepDatas[PREDICT_STEP_STATE].datasets) {\n\t\t\t\ttoastr.error('Dataset is not none', 'Error');\n\t\t\t\treturn reject(new Error('Please drop dataset'))\n\t\t\t}\n\t\t\tasync.each(self.stepDatas[PREDICT_STEP_STATE].datasets, function(dataset,_cb){\n\t\t\t\tif(!isRun(dataset)) {\n\t\t\t\t\ttoastr.error('Curve in dataset is not [no choose]', 'Error');\n\t\t\t\t\treturn reject(new Error('Please drop dataset'))\n\t\t\t\t}\n\t\t\t\tevaluateExpr(dataset,dataset.discrmnt)\n\t\t\t\t.then(function(curves) {\n\t\t\t\t\tgetDataCurveAndFilter(dataset, curves)\n\t\t\t\t\t.then(async function(dataCurves) {\n\t\t\t\t\t\t// console.log(target,dataCurves);\t\n\t\t\t\t\t\tlet payload = {\n\t\t\t\t\t\t\tfeatures: dataCurves,\n\t\t\t\t\t\t\tmodel_id: self.model_id\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// let dataPrediction = await postPredict(payload);\t\n\t\t\t\t\t\tpostPredict(payload)\n\t\t\t\t\t\t.then((dataPrediction) => {\n\t\t\t\t\t\t\thandleResultPrediction(dataset, dataPrediction)\n\t\t\t\t\t\t\t.then((newCurve) => {\n\t\t\t\t\t\t\t\ttoastr.success('New curve success', 'success')\n\t\t\t\t\t\t\t\t_cb();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\t\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\ttoastr.error('Some thing went wrong', 'Error')\n\t\t\t\t\t_cb(err);\n\t\t\t\t});\n\t\t\t},err => {\n\t\t\t\tif(err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}\n\t\t\t\tself.saveMlProject();\n\t\t\t\tresolve();\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction evaluateExpr(dataset, discriminator) {\n\t\treturn new Promise(resolve => {\n\t\t\tlet result = new Array();\n\t\t    let length = 0;\n\t\t    // let length = (dataset.bottom - dataset.top) / dataset.step;\n\t\t    let curveSet = new Set();\n\t\t    let curvesData = new Array();\n\t\t    let curvesInDataset = dataset.curves;\n\t\t    if (!curvesInDataset) return callback(result);\n\t\t    function findCurve(condition) {\n\t\t        if (condition && condition.children && condition.children.length) {\n\t\t            condition.children.forEach(function (child) {\n\t\t                findCurve(child);\n\t\t            })\n\t\t        } else if (condition && condition.left && condition.right) {\n\t\t            curveSet.add(condition.left.value);\n\t\t            if (condition.right.type == 'curve') {\n\t\t                curveSet.add(condition.right.value);\n\t\t            }\n\t\t        } else {\n\t\t            return;\n\t\t        }\n\t\t    }\n\n\t\t    findCurve(discriminator);\n\n\t\t    function evaluate(condition, index) {\n\t\t    \tif(typeof discriminator !== 'undefined' && !discriminator.active) {return true;}\n\t\t        if (condition && condition.children && condition.children.length) {\n\t\t            let left = evaluate(condition.children[0], index);\n\t\t            let right = evaluate(condition.children[1], index);\n\t\t            switch (condition.operator) {\n\t\t                case 'and':\n\t\t                    return left && right;\n\t\t                case 'or':\n\t\t                    return left || right;\n\t\t            }\n\t\t        }\n\t\t        else if (condition && condition.left && condition.right) {\n\t\t            let leftCurve = curvesData.find(function (curve) {\n\t\t                return curve.name == condition.left.value;\n\t\t            });\n\t\t            let left = leftCurve ? parseFloat(leftCurve.data[index]) : null;\n\n\t\t            let right = condition.right.value;\n\t\t            if (condition.right.type == 'curve') {\n\t\t                let rightCurve = curvesData.find(function (curve) {\n\t\t                    return curve.name == condition.right.value;\n\t\t                })\n\t\t                right = rightCurve ? parseFloat(rightCurve.data[index]) : null;\n\t\t            }\n\n\t\t            if (left != null && right != null) {\n\t\t                switch (condition.comparison) {\n\t\t                    case '<':\n\t\t                        return left < right;\n\t\t                    case '>':\n\t\t                        return left > right;\n\t\t                    case '=':\n\t\t                        return left == right;\n\t\t                    case '<=':\n\t\t                        return left <= right;\n\t\t                    case '>=':\n\t\t                        return left >= right;\n\t\t                }\n\t\t            } else {\n\t\t                return false;\n\t\t            }\n\t\t        } else {\n\t\t            return true;\n\t\t        }\n\t\t    }\n\n\t\t    let curveArr = curvesInDataset.filter(c => {\n\t\t        // console.log('c',c,Array.from(curveSet).includes(c.name),Array.from(curveSet));\n\t\t        return Array.from(curveSet).includes(c.name);\n\t\t    });\n\t\t    console.log(curveArr);\n\t\t    async.eachOfSeries(\n\t\t        curveArr,\n\t\t        function (curve, i, done) {\n\t\t            // console.log('curve of curve arr',curve);\n\t\t            if (curve) {\n\t\t            \t(async()=>{\n\t\t            \t\tlet data = await wiApi.getCurveDataPromise(curve.idCurve);\n\t\t            \t\tif (Array.isArray(data)) {\n\t\t                        curvesData.push({\n\t\t                            idCurve: curve.idCurve,\n\t\t                            name: curve.name,\n\t\t                            data: data.map(d => parseFloat(d.x))\n\t\t                        })\n\t\t                    }\n\t\t                    done();\n\t\t            \t})();\n\t\t            } \n\t\t        },\n\t\t        function (err) {\n\t\t            console.log('done!', curvesData);\n\t\t            (async()=> {\n\t\t            \tlet data = await wiApi.getCurveDataPromise(curvesInDataset[0].idCurve);\n\t\t            \t// console.log(data);\n\t\t            \tlength = data.length;\n\t\t            \tfor (let i = 0; i <= length; i++) {\n\t\t\t\t                result.push(evaluate(discriminator, i));\n\t\t\t\t            }\n\t\t\t            resolve(result);\n\t\t            })();\n\t\t        }\n\t\t    );\n\t\t})\n\t}\n\n\tfunction isRun(dataset) {\n    \tif(!dataset.active) return false;\n    \tlet isValid = true;\n\t\tfor(let i of dataset.inputCurveSpecs) {\n\t\t\tif(i.currentSelect == '[no choose]') {\n\t\t\t\tisValid = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn isValid;\n    }\n\n    function createModelAndBucketId() {\n    \treturn new Promise((resolve, reject) => {\n    \t\tconsole.log(self.model);\n\t    \tlet payload = {};\n\t    \tlet params = self.model.payload.params;\n\t\t\tparams.forEach(i => {\n\t\t\t\tpayload[i.name] = i.value;\n\t\t\t\tif(i.name === 'model_id') self.model_id = i.value;\n\t\t\t})\n\t\t\tconsole.log(payload);\n\t\t\t// let resModelId = await postCreateModel(payload);\n\t\t\tpostCreateModel(payload)\n\t\t\t.then((resModelId) => {\n\t\t\t\tself.setModelId(self.model_id);\n\t\t\t\tself.bucket_id = self.model_id + Date.now()\n\t\t\t\tlet request = {\n\t\t\t\t\tbucket_id: self.bucket_id,\n\t\t\t\t\tdims: self.inputCurveSpecs.length + 1\n\t\t\t\t}\n\t\t\t\t// let resBucketId = await postCreateBucketId(request);\n\t\t\t\tpostCreateBucketId(request)\n\t\t\t\t.then((resBucketId) => {\n\t\t\t\t\tself.setBucketId(self.bucket_id)\n\t\t\t\t\tif(resBucketId.existed) {\n\t\t\t\t\t\trequest.override_flag = true;\n\t\t\t\t\t\t// resBucketId = await postCreateBucketId(request);\n\t\t\t\t\t\tpostCreateBucketId(request)\n\t\t\t\t\t\t.then((resBucketId) => {\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\tmodel_id: resModelId,\n\t\t\t\t\t\t\t\tbucket_id: resBucketId\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t}else {\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\tmodel_id: resModelId,\n\t\t\t\t\t\t\t\tbucket_id: resBucketId\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\treject(err);\n\t\t\t})\n    \t})\n\t\t// return new Promise((resolve) => {\n\t\t// \tresolve({\n\t\t// \t\tmodel_id: resModelId,\n\t\t// \t\tbucket_id: resBucketId\n\t\t// \t})\n\t\t// })\n    }\n\n\tfunction getDataCurveAndFilter(dataset, curves, callback) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet arrNaN = [];\n\t\t\tlet inputCurveData = [];\n\t\t\t// console.log(dataset);\n\t\t\tasync.eachSeries(dataset.inputCurveSpecs, function(input, _cb) {\n\t\t\t\t(async()=> {\n\t\t\t\t\tlet curve = dataset.curves.find(i => {\n\t\t\t\t\t\treturn i.name === input.currentSelect;\n\t\t\t\t\t});\n\t\t\t\t\tlet dataCurve = await wiApi.getCurveDataPromise(curve.idCurve);\n\t\t\t\t\tfor(let i in dataCurve) {\n\t\t\t\t\t\tdataCurve[i] = parseFloat(dataCurve[i].x, 4);\n\t\t\t\t\t\tif(isNaN(dataCurve[i])) curves[i] = false;\n\t\t\t\t\t}\n\t\t\t\t\tinputCurveData.push(dataCurve);\n\t\t\t\t\t_cb();\n\t\t\t\t})();\t\n\t\t\t}, err => {\n\t\t\t\tif (err || !inputCurveData || !inputCurveData.length) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\treject(err || 'Something was wrong');\n\t\t\t\t}\n\t\t\t\tlet cacheInputCurveData = [];\n\t\t\t\tcacheInputCurveData.length = inputCurveData.length;\n\t\t\t\tlet length = inputCurveData[0].length;\n\t\t\t\tfor(let i in inputCurveData) {\n\t\t\t\t\tif(length > inputCurveData[i].length) length = inputCurveData[i].length; \n\t\t\t\t}\n\t\t\t\tfor(let i = 0; i < inputCurveData.length; i++) {\n\t\t\t\t\tif(inputCurveData[i].length > length) {\n\t\t\t\t\t\tinputCurveData[i].splice(length,inputCurveData[i].length - length);\n\t\t\t\t\t}\n\t\t\t\t\tfor(let j = 0; j < inputCurveData[i].length; j++) {\n\t\t\t\t\t\tif(!cacheInputCurveData[i]) cacheInputCurveData[i] = []; \n\t\t\t\t\t\tif(curves[j]) {\n\t\t\t\t\t\t\tcacheInputCurveData[i].push(inputCurveData[i][j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tinputCurveData = cacheInputCurveData;\n\t\t\t\tresolve(inputCurveData);\t\n\t\t\t});\n\t\t})\n\t}\n\tfunction createPayloadForTrain() {\n\t\tif(!self.model.payload.train) {\n\t\t\treturn {\n\t\t\t\tmodel_id: self.model_id,\n\t\t\t\tbucket_id: self.bucket_id\n\t\t\t}\n\t\t}else {\n\t    \tlet payload = {\n\t    \t\tmodel_id: self.model_id,\n\t\t\t\tbucket_id: self.bucket_id\n\t    \t};\n\t    \tlet params = self.model.payload.train;\n\t\t\tparams.forEach(i => {\n\t\t\t\tpayload[i.name] = i.value;\n\t\t\t})\n\t\t\treturn payload\n\t\t}\n\t}\n\n\tthis.runAll = async function() {\n\t\tself.running = true;\n\t\ttrain()\n\t\t.then(() => {\n\t\t\treturn verify();\n\t\t})\n\t\t.then(() => {\n\t\t\treturn prediction();\n\t\t})\n\t\t.then(() => {\n\t\t\tconsole.log('complete')\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t})\n\t\t.finally(() => {\n\t\t\tconsole.log('Run All');\n\t\t\t$timeout(() => {\n\t\t\t\tself.running = false;\n\t\t\t})\n\t\t})\n\t}\n\n\tthis.onToggleActiveOutput = function(dataset) {\n\t\t$timeout(() => {\n\t\t\tdataset.active = !dataset.active;\n\t\t})\n\t}\n\n\tasync function saveCurve(curveInfo, dataset, callback) {\n\t\tlet payload = {\n            idDataset: curveInfo.idDataset,\n            data: curveInfo.data,\n            unit: curveInfo.unit || undefined,\n            idFamily: curveInfo.idFamily || null,\n        }\n        if(dataset.step == 0 ) {\n        \tlet curveData = await wiApi.getCurveDataPromise(dataset.curves[0].idCurve);\n        \tpayload.data = curveData.map((d,i)=>{\n                return [parseFloat(d.y),curveInfo.data[i]];\n            });\n        }\n    \tlet curve = await wiApi.checkCurveExistedPromise(curveInfo.name, curveInfo.idDataset);\n    \tif (curve && curve.idCurve) {\n            payload.idDesCurve = curve.idCurve;\n            curveInfo.idCurve = curve.idCurve;\n        } else {\n            payload.curveName = curveInfo.name\n        }\n        let newCurve = await wiApi.createCurvePromise(payload);\n        // console.log(newCurve);\n        callback(newCurve);\n\t}\n\tfunction handleResultVerify(dataset, dataVerify) {\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\tlet curveTarget = {\n\t\t\t\tname: 'target',\n\t\t\t\tvalue: dataVerify.target\n\t\t\t}\t\t\n\t\t\tgetDataCurves(dataset, dataset.inputCurveSpecs, function(curves) {\n\t\t\t\tif(!curves) reject(new Error('Failture'));\n\t\t\t\tlet targetNFilter = curves.pop();\n\t\t\t\tlet filterNullResult = filterNull(curves);\n\t\t\t\tfillNullInCurve(filterNullResult.fillNull, curveTarget, function(res) {\n\t\t\t\t\tconsole.log(res); \n\t\t\t\t\tif(!res) reject(new Error('Failture'));\n\t\t\t\t\tlet curveInfo = {\n                        idDataset: dataset.idDataset,\n                        idFamily: dataset.inputCurveSpecs.slice(-1).pop().value.idFamily,\n                        // idWell: well.idWell,\n                        name: dataset.resultCurveName,\n                        data: res.value,\n                        unit: dataset.inputCurveSpecs.slice(-1).pop().value.unit\n                    }\n                    saveCurve(curveInfo, dataset, function(newCurve) {\n                    \tif(!newCurve.idCurve) reject(new Error('Failture'));\n                    \tresolve(newCurve)\n                    })\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\tfunction handleResultPrediction (dataset, dataPrediction) {\n\t\treturn new Promise ((resolve, reject) => {\n\t\t\tlet curveTarget = {\n\t\t\t\tname: 'target',\n\t\t\t\tvalue: dataPrediction.target\n\t\t\t}\t\t\n\t\t\tlet idFamily, unit;\n\t\t\tif(self.stepDatas[TRAIN_STEP_STATE].datasets[0].inputCurveSpecs.slice(-1).pop().value) {\n\t\t\t\tidFamily = self.stepDatas[TRAIN_STEP_STATE].datasets[0].inputCurveSpecs.slice(-1).pop().value.idFamily;\n\t\t\t\tunit = self.stepDatas[TRAIN_STEP_STATE].datasets[0].inputCurveSpecs.slice(-1).pop().value.unit;\t\n\t\t\t}else {\n\t\t\t\t_cb(new Error('Data Training not existed'))\n\t\t\t}\n\t\t\t\n\t\t\t// console.log(self.stepDatas[TRAIN_STEP_STATE].datasets[0].inputCurveSpecs.slice(-1).pop());\n\t\t\tgetDataCurves(dataset, dataset.inputCurveSpecs, function(curves) {\n\t\t\t\tif(!curves) reject(new Error('Failture'));\n\t\t\t\tlet targetNFilter = curves.pop();\n\t\t\t\tlet filterNullResult = filterNull(curves);\n\t\t\t\tfillNullInCurve(filterNullResult.fillNull, curveTarget, function(res) {\n\t\t\t\t\tconsole.log(res); \n\t\t\t\t\tif(!res) reject(new Error('Failture'));\n\t\t\t\t\tlet curveInfo = {\n\t\t                idDataset: dataset.idDataset,\n\t\t                idFamily: idFamily,\n\t\t                // idWell: well.idWell,\n\t\t                name: dataset.resultCurveName,\n\t\t                data: res.value,\n\t\t                unit: unit\n\t\t            }\n\t\t            saveCurve(curveInfo, dataset, function(newCurve) {\n\t\t            \tif(!newCurve.idCurve) reject(new Error('Failture'));\n\t\t            \tresolve(newCurve)\n\t\t            })\n\t\t\t\t})\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction fillNullInCurve(fillArr, curve, cb) {\n        // async.forEachOfSeries(curvesArray, function (curve, j, done) {\n            for (let i in fillArr) {\n                curve.value.splice(fillArr[i], 0, NaN);\n            }\n\n            cb && cb(curve);\n            // done();\n        // }, function (err) {\n        //     cb && cb(curvesArray);\n        // });\n    }\n\n    function filterNull(curves) {\n        // let WELL = [];\n        let l = curves.length;\n        let filterCurves = [];\n        let fillNull = [];\n        for (let j = 0; j < l; j++) {\n            filterCurves[j] = [];\n        }\n        for (let i = 0; i < curves[0].length; i++) {\n            let notNull = true;\n            for (let j = 0; j < l; j++)\n                if (isNaN(curves[j][i])) {\n                    fillNull.push(i);\n                    notNull = false;\n                    break;\n                }\n            if (notNull)\n                for (let j = 0; j < l; j++) {\n                    // if (j == 0) WELL.push(well[i]);\n                    filterCurves[j].push(curves[j][i]);\n                }\n        }\n        return {\n            filterCurves: filterCurves,\n            fillNull: fillNull,\n            // well: WELL\n        };\n    }\n\n    async function getDataCurves(dataset, curves, callback) {\n    \tlet listInputCurves = [];\n\n    \tif(curves.length) {\n    \t\tfor(let i = 0; i < curves.length; i++) {\n    \t\t\tlet curve = dataset.curves.find(c => {\n    \t\t\t\treturn c.name === curves[i].value.name;\n    \t\t\t})\n    \t\t\tif(!curve) callback([]);\n    \t\t\tlet curveData = await wiApi.getCurveDataPromise(curve.idCurve);\n    \t\t\tlistInputCurves[i] = curveData.map(function (d) {\n                    return parseFloat(d.x);\n                });\n    \t\t}\n    \t\tcallback && callback(listInputCurves);\n    \t}else {\n    \t\tcallback && callback([]);\n    \t}\n    }\t\n\n    async function doAfterTrain(dataset) {\n    \tif(self.model && self.model['som-visualization']) {\n\t\t\t$http({\n\t\t\t\tmethod: 'GET',\n\t\t\t\turl: `${self.model.url}/api/model/som/${self.model_id}`,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tif(res.status === 201) {\n\t\t\t\t\t$timeout(() => {\n\t\t\t\t\t\tself.showSomVisualize = true;\n\t\t    \t\t\tself.somVisualize = res.data;\n\t\t    \t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}else {\n\t\t\t$timeout(() => {\n\t\t\t\tself.showSomVisualize = false;\n    \t\t})\n\t\t}\n    }\n    // ============================================================================\n    \tthis.getDistributionMaps = function (data) {\n\t\t\treturn data.distributionMaps;\n\t\t}\n\n\t\tthis.getDistributionMapHeader = function (distributionMap) {\n\t\t\treturn distributionMap.header;\n\t\t}\n\n\t\tthis.getDistributionMapRows = function (distributionMap) {\n\t\t\treturn distributionMap.rows;\n\t\t}\n\n\t\tthis.getDistributionMapCells = function (row) {\n\t\t\treturn row.cells;\n\t\t}\n\n\t\tthis.getDistributionMapWeight = function (cell) {\n\t\t\treturn cell.weight;\n\t\t}\n\n\t\tthis.getDistributionMapScaledWeight = function (cell) {\n\t\t\treturn cell.scaledWeight;\n\t\t}\n\n\t\tthis.getDistributionMapLabel = function (cell) {\n\t\t\treturn cell.label;\n\t\t}\n\n\t\tthis.distributionMapClickFn = function (event, cell) {\n\t\t\tconsole.log(cell);\n\t\t}\n\n\t\tthis.distributionMapColors = [\"#FFFFDD\", \"#AAF191\", \"#80D385\", \"#61B385\", \"#3E9583\", \"#217681\", \"#285285\", \"#1F2D86\", \"#000086\"];\n\t\tthis.distributionMapColorRange = d3.range(0, 1, 1.0 / (this.distributionMapColors.length - 1));\n\t\tthis.distributionMapColorRange.push(1);\n\n\t\tthis.getDistributionMapColors = function () {\n\t\t\treturn self.distributionMapColors;\n\t\t}\n\n\t\tthis.distributionMapColorScale = d3.scaleLinear()\n\t\t.domain(this.distributionMapColorRange)\n\t\t.range(this.distributionMapColors)\n\n\t\t// Visualization map function\n\t\tthis.getVisualizationMap = function (data) {\n\t\t\treturn data.visualizationMap;\n\t\t}\n\n\t\tthis.getVisualizationMapCells = function (row) {\n\t\t\treturn row.cells;\n\t\t}\n\n\t\tthis.getVisualizationMapFeatures = function (cell) {\n\t\t\treturn cell.features;\n\t\t}\n\n\t\tthis.getVisualizationMapLabel = function (cell) {\n\t\t\treturn cell.label;\n\t\t}\n\n\t\tthis.getVisualizationMapLabels = function (data) {\n\t\t\tlet labels = [];\n\t\t\tfor (i = 0; i < data.visualizationMap.length; i++) {\n\t\t\t\tcells = data.visualizationMap[i].cells;\n\t\t\t\tfor (j = 0; j < cells.length; j++) {\n\t\t\t\t\tlabel = cells[j].label;\n\t\t\t\t\tif (!labels.includes(label)) {\n\t\t\t\t\t\tlabels.push(label)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn labels;\n\t\t}\n\n\t\tthis.getVisualizationMapFeatureWeight = function (feature) {\n\t\t\treturn feature.weight;\n\t\t}\n\n\t\tthis.getVisualizationMapFeatureScaledWeight = function (feature) {\n\t\t\treturn feature.scaledWeight;\n\t\t}\n\n\t\tthis.getVisualizationMapFeatureNames = function (data) {\n\t\t\tlet featureHeaders = []\n\t\t\tdata.visualizationMap[0].cells[0].features.forEach(feature => {\n\t\t\t\tfeatureHeaders.push(feature.header);\n\t\t\t});\n\t\t\treturn featureHeaders;\n\t\t}\n\n\t\tthis.getVisualizationMapFeatureName = function (feature) {\n\t\t\treturn feature.header;\n\t\t}\n\n\t\tthis.visualizationMapClickFn = function (event, cell) {\n\t\t\tconsole.log(cell);\n\t\t}\n\n\t\tthis.visualizationMapLabelColors = [\n\t\t\"rgba(255,0,0,0.6)\",\n\t\t\"rgba(0,255,0,0.6)\",\n\t\t\"rgba(0,0,255,0.6)\",\n\t\t\"rgba(255,255,0,0.6)\",\n\t\t\"rgba(0,255,255,0.6)\",\n\t\t\"violet\",\n\t\t\"springgreen\"\n\t\t]\n\n\t\tthis.visualizationMapFeatureColors = [\n\t\t'red', 'green', 'blue', 'yellow'\n\t\t]\n\n\t\tthis.getFittedModel = async function () {\n\t\t\tif(self.model['som-visualization']) {\n\t    \t\t$http({\n\t\t    \t\tmethod: 'GET',\n\t\t    \t\turl: `${self.model.url}/api/model/som/${self.model_id}`,\n\t\t    \t})\n\t\t    \t.then((res) => {\n\t\t    \t\tconsole.log(res);\n\t\t    \t\tif(res.status === 201) {\n\t\t    \t\t\t$timeout(() => {\n\t\t\t    \t\t\tself.somVisualize = res.data;\n\t\t\t    \t\t})\n\t\t    \t\t}\n\t\t    \t});\n\t    \t}\n\t\t}\n}\n\n//# sourceURL=webpack:///./training-prediction/index.js?");

/***/ }),

/***/ "./training-prediction/newstyle.less":
/*!*******************************************!*\
  !*** ./training-prediction/newstyle.less ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/less-loader/dist/cjs.js!./newstyle.less */ \"../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./training-prediction/newstyle.less\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./training-prediction/newstyle.less?");

/***/ }),

/***/ "./training-prediction/newtemplate.html":
/*!**********************************************!*\
  !*** ./training-prediction/newtemplate.html ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!-- <div id=\\\"wapper\\\" style=\\\"display: none; background: #00000008; height: 100%; width: 100%; z-index: 4; position: absolute;\\\"\\n    ng-click=\\\"self.showWapper()\\\"></div> -->\\n<div ng-show=\\\"self.running\\\" style=\\\"background: #ffffffc9; height: 100%; width: 100%; z-index: 5; position: absolute; display: flex; align-items: center; justify-content: center;\\\">\\n    <div >\\n        <div class=\\\"loader08\\\"></div>\\n    </div>\\n</div>\\n<div style=\\\"display:flex;flex-direction: column;width: 100vw;height: 100%; position: relative; padding: 40px; background: #EDEFF3;\\\"\\n    class=\\\"slim-scroller\\\">\\n    <div class=\\\"toolbar\\\">\\n        <div class=\\\"tab\\\">\\n            <div class=\\\"tab-button\\\" ng-class=\\\"{'active' : isSet(1)}\\\" ng-click=\\\"setTab(1)\\\"\\n                style=\\\"border-right: 1px solid #edeff3;\\\">Train</div>\\n            <div class=\\\"tab-button\\\" ng-class=\\\"{'active' : isSet(2)}\\\" ng-click=\\\"setTab(2)\\\"\\n                style=\\\"border-right: 1px solid #edeff3;border-left: 1px solid #edeff3;\\\">Verify</div>\\n            <div class=\\\"tab-button\\\" ng-class=\\\"{'active' : isSet(3)}\\\" ng-click=\\\"setTab(3)\\\"\\n                style=\\\"border-left: 1px solid #edeff3;\\\">Predict</div>\\n             <div class=\\\"tab-button\\\" ng-class=\\\"{'active' : isSet(4)}\\\" ng-show=\\\"self.showSomVisualize\\\" ng-click=\\\"setTab(4)\\\"\\n            style=\\\"border-left: 1px solid #edeff3;\\\">Som Visualize</div>\\n        </div>\\n    </div>\\n    <div class=\\\"workspace\\\">\\n        <div ng-show=\\\"isSet(1)\\\" class=\\\"workspace-main\\\" id=\\\"Train\\\" ng-init=\\\"self.stepDatas['training'].expanded=true\\\">\\n            <div class=\\\"search\\\">\\n                <div class=\\\"ti ti-search\\\" style=\\\"margin-right: 15px; font-size: 15px;\\\"></div>\\n                <input placeholder=\\\"Search\\\" ng-model=\\\"searchTraining\\\">\\n            </div>\\n            <div class=\\\"button\\\">\\n                <div class=\\\"toolbar-button\\\">Sort by</div>\\n                <div class=\\\"toolbar-button\\\">Select All</div>\\n                <div class=\\\"toolbar-button active\\\" ng-click=\\\"self.runTask(0);\\\">Run Now</div>\\n                <div class=\\\"toolbar-button active\\\" ng-click=\\\"self.runAll()\\\">Run All</div>\\n            </div>\\n            <div style=\\\"overflow: hidden; display: flex; flex-direction: column; height: 100%;\\\">\\n                <div class=\\\"table-main\\\">\\n                    <div class='table-row'\\n                        style=\\\"color: #4e555f; font-weight: bold; position: sticky; top: 0; z-index: 2; background: #fff; border: none; box-shadow: 0 5px 6px #00000012;\\\">\\n                        <div class=\\\"table-block\\\"\\n                            style=\\\"width: 70px; min-width: 70px; position: sticky; left: 0;\\\">Active\\n                        </div>\\n                        <div class=\\\"table-block\\\" style=\\\"width: 70px; min-width: 70px;\\\">Filter</div>\\n                        <div class=\\\"table-block\\\">Well</div>\\n                        <div class=\\\"table-block\\\">Dataset </div>\\n                        <div class=\\\"table-block\\\" ng-repeat=\\\"input in self.inputCurveSpecs track by $index\\\"\\n                            style=\\\"width: 120px\\\">{{input.label}}</div>\\n                        <div class=\\\"table-block\\\" ng-if=\\\"self.stepDatas['training'].target\\\">Target {{}}</div>\\n                        <div class=\\\"table-block\\\" ng-if=\\\"self.stepDatas['training'].name != 'Train'\\\">\\n                            {{self.stepDatas['training'].name}} curve name</div>\\n                    </div>\\n                    <div class='table-row' ng-repeat=\\\"(indexDataset,dataset) in self.stepDatas['training'].datasets | filter:searchTraining track by $index\\\"\\n                        ng-init=\\\"dataset.showList = [];\\\">\\n                        <div class=\\\"table-block\\\"\\n                            style=\\\"width: 70px; min-width: 70px; position: sticky; left: 0; z-index: 1;\\\">\\n                            <label class=\\\"switch\\\">\\n                                <input type=\\\"checkbox\\\" ng-checked=\\\"dataset.active\\\">\\n                                <span class=\\\"slider round\\\" ng-click=\\\"self.onToggleActiveOutput(dataset)\\\"></span>\\n                            </label>\\n                        </div>\\n                        <div class=\\\"table-block\\\" style=\\\"width: 70px; min-width: 70px;\\\"\\n                            ng-click=\\\"self.onDiscriminator(dataset)\\\">\\n                            <span class=\\\"ti ti-more\\\"></span>\\n                        </div>\\n                        <div class=\\\"table-block\\\" title='{{dataset.wellName}}'>{{dataset.wellName}}</div>\\n                        <div class=\\\"table-block\\\" title='{{dataset.name}}'>{{dataset.name}}</div>\\n\\n                        <div class=\\\"table-block\\\" ng-repeat=\\\"(idxInput,input) in dataset.inputCurveSpecs track by $index\\\"\\n                            style=\\\"overflow: visible;\\\">\\n                            <div style=\\\"position: relative;\\\">\\n                                <div style=\\\"width: 100px; display: flex; align-items: center; justify-content: space-between;\\\">{{dataset.inputCurveSpecs[idxInput].currentSelect}}\\n                                    <div ng-click=\\\"dataset.showList[idxInput]=!dataset.showList[idxInput]; self.showWapper()\\\" class=\\\"fa fa-caret-down \\\" style=\\\" margin-left: 10px; color: #a5acb4; cursor: pointer; \\\"></div>\\n                                </div>\\n                                <div ng-show=\\\"dataset.showList[idxInput]\\\" class=\\\"dropdown-list\\\">\\n                                    <span class=\\\"dropdown-list-caret\\\"></span>\\n                                    <div style=\\\"overflow: auto; max-height: 185px;\\\" >\\n                                        <div ng-repeat=\\\"i in self.stepDatas['training'].selectionList[idxInput] track by i.data.label\\\" \\n                                            ng-click=\\\"dataset.showList[idxInput]=!dataset.showList[idxInput]; self.setItemOnChange(dataset, idxInput, i)\\\">\\n                                            {{i.data.label}}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- <wi-dropdown-list place-holder=\\\"Curve\\\" items=\\\"self.stepDatas['training'].selectionList[$index]\\\"\\n                                    hide-delete-button='true' current-select='input.currentSelect'\\n                                    on-item-changed=\\\"self.getOnItemChange('training', indexDataset, $index)\\\"></wi-dropdown-list> -->\\n                        </div>\\n                        <div class=\\\"table-block\\\" ng-if=\\\"self.stepDatas['training'].name != 'Train'\\\" style=\\\"\\\">\\n                            <input type=\\\"text\\\" style=\\\"height: 32px;\\\" ng-model=\\\"dataset.resultCurveName\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div ng-show=\\\"isSet(2)\\\" class=\\\"workspace-main\\\">\\n            <div class=\\\"search\\\">\\n                <div class=\\\"ti ti-search\\\" style=\\\"margin-right: 15px; font-size: 15px;\\\"></div>\\n                <input placeholder=\\\"Search\\\" ng-model=\\\"searchVerify\\\">\\n            </div>\\n            <div class=\\\"button\\\">\\n                <div class=\\\"toolbar-button\\\">Sort by</div>\\n                <div class=\\\"toolbar-button\\\">Select All</div>\\n                <div class=\\\"toolbar-button active\\\" ng-click=\\\"self.runTask(1);\\\">Run Now</div>\\n                <div class=\\\"toolbar-button active\\\" ng-click=\\\"self.runAll()\\\">Run All</div>\\n            </div>\\n            <div style=\\\"overflow: hidden; display: flex; flex-direction: column;  height: 100%;\\\">\\n\\n                <div class=\\\"table-main\\\">\\n                    <div class='table-row'\\n                        style=\\\"color: #4e555f; font-weight: bold; position: sticky; top: 0; z-index: 2; background: #fff; border: none;box-shadow: 0 5px 6px #00000012;\\\">\\n                        <div class=\\\"table-block\\\"\\n                            style=\\\"width: 70px; min-width: 70px; position: sticky; left: 0;\\\">Active\\n                        </div>\\n                        <div class=\\\"table-block\\\" style=\\\"width: 70px; min-width: 70px;\\\">Filter</div>\\n                        <div class=\\\"table-block\\\">Well</div>\\n                        <div class=\\\"table-block\\\">Dataset </div>\\n                        <div class=\\\"table-block\\\" ng-repeat=\\\"input in self.inputCurveSpecs track by $index\\\"\\n                            style=\\\"width: 120px\\\">{{input.label}}</div>\\n                        <div class=\\\"table-block\\\" ng-if=\\\"self.stepDatas['verify'].target\\\">Target {{}}</div>\\n                        <div class=\\\"table-block\\\" ng-if=\\\"self.stepDatas['verify'].name != 'Train'\\\">\\n                            {{self.stepDatas['verify'].name}} curve name</div>\\n                    </div>\\n                    <div class='table-row' ng-repeat=\\\"(indexDataset,dataset) in self.stepDatas['verify'].datasets | filter:searchVerify track by $index\\\"\\n                        ng-init=\\\"dataset.showList = [];\\\">\\n                        <div class=\\\"table-block\\\"\\n                            style=\\\"width: 70px; min-width: 70px; background: #fff; position: sticky; left: 0;z-index: 1;\\\">\\n                            <label class=\\\"switch\\\">\\n                                <input type=\\\"checkbox\\\" ng-checked=\\\"dataset.active\\\">\\n                                <span class=\\\"slider round\\\" ng-click=\\\"self.onToggleActiveOutput(dataset)\\\"></span>\\n                            </label>\\n                        </div>\\n                        <div class=\\\"table-block\\\" style=\\\"width: 70px; min-width: 70px;\\\"\\n                            ng-click=\\\"self.onDiscriminator(dataset)\\\">\\n                            <span class=\\\"ti ti-more\\\"></span>\\n                        </div>\\n                        <div class=\\\"table-block\\\" title='{{dataset.wellName}}'>{{dataset.wellName}}</div>\\n                        <div class=\\\"table-block\\\" title='{{dataset.name}}'>{{dataset.name}}</div>\\n                        <div class=\\\"table-block\\\" ng-repeat=\\\"(idxInput,input) in dataset.inputCurveSpecs track by $index\\\"\\n                            style=\\\"overflow: visible;\\\">\\n                            <div style=\\\"position: relative;\\\">\\n                                <div style=\\\"width: 100px; display: flex; align-items: center; justify-content: space-between;\\\">{{dataset.inputCurveSpecs[idxInput].currentSelect}}\\n                                    <div ng-click=\\\"dataset.showList[idxInput]=!dataset.showList[idxInput]\\\" class=\\\"fa fa-caret-down \\\" style=\\\" margin-left: 10px; color: #a5acb4; cursor: pointer; \\\"></div>\\n                                </div>\\n                                <div ng-show=\\\"dataset.showList[idxInput]\\\" class=\\\"dropdown-list\\\">\\n                                    <span class=\\\"dropdown-list-caret\\\"></span>\\n                                    <div style=\\\"overflow: auto; max-height: 185px;\\\">\\n                                        <div\\n                                            ng-repeat=\\\"i in self.stepDatas['verify'].selectionList[idxInput] track by i.data.label\\\"\\n                                            ng-click=\\\"dataset.showList[idxInput]=!dataset.showList[idxInput];\\n                                                    self.setItemOnChange(dataset, idxInput, i)\\\">\\n                                            {{i.data.label}}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- <wi-dropdown-list place-holder=\\\"Curve\\\" items=\\\"self.stepDatas['training'].selectionList[$index]\\\"\\n                                            hide-delete-button='true' current-select='input.currentSelect'\\n                                            on-item-changed=\\\"self.getOnItemChange('training', indexDataset, $index)\\\"></wi-dropdown-list> -->\\n                        </div>\\n                        <div class=\\\"table-block\\\" ng-if=\\\"self.stepDatas['verify'].name != 'Train'\\\">\\n                            <input type=\\\"text\\\" style=\\\"height: 32px;\\\" ng-model=\\\"dataset.resultCurveName\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div ng-show=\\\"isSet(3)\\\" class=\\\"workspace-main\\\">\\n            <div class=\\\"search\\\">\\n                <div class=\\\"ti ti-search\\\" style=\\\"margin-right: 15px; font-size: 15px;\\\"></div>\\n                <input placeholder=\\\"Search\\\" ng-model=\\\"searchPrediction\\\">\\n            </div>\\n            <div class=\\\"button\\\">\\n                <div class=\\\"toolbar-button\\\">Sort by</div>\\n                <div class=\\\"toolbar-button\\\">Select All</div>\\n                <div class=\\\"toolbar-button active\\\" ng-click=\\\"self.runTask(2);\\\">Run Now</div>\\n                <div class=\\\"toolbar-button active\\\" ng-click=\\\"self.runAll()\\\">Run All</div>\\n            </div>\\n            <div style=\\\"overflow: hidden; display: flex; flex-direction: column;  height: 100%;\\\">\\n\\n                <div class=\\\"table-main\\\">\\n                    <div class='table-row'\\n                        style=\\\"color: #4e555f; font-weight: bold; position: sticky; top: 0; z-index: 2; background: #fff; border: none;    box-shadow: 0 5px 6px #00000012;\\\">\\n                        <div class=\\\"table-block\\\"\\n                            style=\\\"width: 70px; min-width: 70px; position: sticky; left: 0;\\\">Active\\n                        </div>\\n                        <div class=\\\"table-block\\\" style=\\\"width: 70px; min-width: 70px;\\\">Filter</div>\\n                        <div class=\\\"table-block\\\">Well</div>\\n                        <div class=\\\"table-block\\\">Dataset </div>\\n                        <div class=\\\"table-block\\\" ng-repeat=\\\"input in self.inputCurveSpecs track by $index\\\"\\n                            style=\\\"width: 120px\\\">{{input.label}}</div>\\n                        <div class=\\\"table-block\\\" ng-if=\\\"self.stepDatas['prediction'].target\\\">Target {{}}</div>\\n                        <div class=\\\"table-block\\\" ng-if=\\\"self.stepDatas['prediction'].name != 'Train'\\\">\\n                            {{self.stepDatas['prediction'].name}} curve name</div>\\n                    </div>\\n                    <div class='table-row' ng-repeat=\\\"(indexDataset,dataset) in self.stepDatas['prediction'].datasets| filter:searchPrediction track by $index\\\" \\n                        ng-init=\\\"dataset.showList = [];\\\">\\n                        <div class=\\\"table-block\\\"\\n                            style=\\\"width: 70px; min-width: 70px; background: #fff; position: sticky; left: 0;z-index: 1;\\\">\\n                            <label class=\\\"switch\\\">\\n                                <input type=\\\"checkbox\\\" ng-checked=\\\"dataset.active\\\">\\n                                <span class=\\\"slider round\\\" ng-click=\\\"self.onToggleActiveOutput(dataset)\\\"></span>\\n                            </label>\\n                        </div>\\n                        <div class=\\\"table-block\\\" style=\\\"width: 70px; min-width: 70px;\\\"\\n                            ng-click=\\\"self.onDiscriminator(dataset)\\\">\\n                            <span class=\\\"ti ti-more\\\"></span>\\n                        </div>\\n                        <div class=\\\"table-block\\\" title='{{dataset.wellName}}'>{{dataset.wellName}}</div>\\n                        <div class=\\\"table-block\\\" title='{{dataset.name}}'>{{dataset.name}}</div>\\n                        <div class=\\\"table-block\\\" ng-repeat=\\\"(idxInput,input) in dataset.inputCurveSpecs track by $index\\\"\\n                            style=\\\"overflow: visible;\\\">\\n                            <div style=\\\"position: relative;\\\">\\n                                <div style=\\\"width: 100px; display: flex; align-items: center; justify-content: space-between;\\\">{{dataset.inputCurveSpecs[idxInput].currentSelect}}\\n                                    <div ng-click=\\\"dataset.showList[idxInput]=!dataset.showList[idxInput]\\\" class=\\\"fa fa-caret-down \\\" style=\\\" margin-left: 10px; color: #a5acb4; cursor: pointer; \\\"></div>\\n                                </div>\\n                                <div ng-show=\\\"dataset.showList[idxInput]\\\" class=\\\"dropdown-list\\\">\\n                                    <span class=\\\"dropdown-list-caret\\\"></span>\\n                                    <div style=\\\"overflow: auto; max-height: 185px;\\\">\\n                                        <div\\n                                            ng-repeat=\\\"i in self.stepDatas['prediction'].selectionList[idxInput] track by i.data.label\\\"\\n                                            ng-click=\\\"dataset.showList[idxInput]=!dataset.showList[idxInput];\\n                                            self.setItemOnChange(dataset, idxInput, i)\\\">\\n                                            {{i.data.label}}\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- <wi-dropdown-list place-holder=\\\"Curve\\\" items=\\\"self.stepDatas['training'].selectionList[$index]\\\"\\n                                            hide-delete-button='true' current-select='input.currentSelect'\\n                                            on-item-changed=\\\"self.getOnItemChange('training', indexDataset, $index)\\\"></wi-dropdown-list> -->\\n                        </div>\\n                        <div class=\\\"table-block\\\" ng-if=\\\"self.stepDatas['prediction'].name != 'Train'\\\" style=\\\"\\\">\\n                            <input type=\\\"text\\\" style=\\\"height: 32px;\\\" ng-model=\\\"dataset.resultCurveName\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div ng-show=\\\"isSet(4)\\\" class=\\\"workspace-main\\\" style=\\\"height: calc(100vh - 200px);\\\">\\n            <div ng-if=\\\"self.showSomVisualize\\\" style=\\\"display: flex; overflow: hidden;\\\">\\n                <div style=\\\"width: calc(100vw - 300px); overflow: auto hidden;\\\">\\n                    <distribution-map\\n                    data=\\\"self.somVisualize\\\"\\n                    colors=\\\"self.getDistributionMapColors\\\"\\n                    color-scale=\\\"self.distributionMapColorScale\\\"\\n                    get-maps=\\\"self.getDistributionMaps\\\"\\n                    get-header=\\\"self.getDistributionMapHeader\\\"\\n                    get-rows=\\\"self.getDistributionMapRows\\\"\\n                    get-cells=\\\"self.getDistributionMapCells\\\"\\n                    get-weight=\\\"self.getDistributionMapWeight\\\"\\n                    get-scaled-weight=\\\"self.getDistributionMapScaledWeight\\\"\\n                    get-label=\\\"self.getDistributionMapLabel\\\"\\n                    click-fn=\\\"self.distributionMapClickFn\\\"\\n                    >\\n                    </distribution-map>\\n                </div>\\n                <div>\\n                    <visualization-map\\n                    data=\\\"self.somVisualize\\\"\\n                    get-map=\\\"self.getVisualizationMap\\\"\\n                    get-cells=\\\"self.getVisualizationMapCells\\\"\\n                    get-features=\\\"self.getVisualizationMapFeatures\\\"\\n                    get-label=\\\"self.getVisualizationMapLabel\\\"\\n                    get-labels=\\\"self.getVisualizationMapLabels\\\"\\n                    get-feature-weight=\\\"self.getVisualizationMapFeatureWeight\\\"\\n                    get-feature-scaled-weight=\\\"self.getVisualizationMapFeatureScaledWeight\\\"\\n                    max-weight=1\\n                    get-feature-name=\\\"self.getVisualizationMapFeatureName\\\"\\n                    get-feature-names=\\\"self.getVisualizationMapFeatureNames\\\"\\n                    feature-colors=\\\"self.visualizationMapFeatureColors\\\"\\n                    label-colors=\\\"self.visualizationMapLabelColors\\\"\\n                    click-fn=\\\"self.visualizationMapClickFn\\\"\\n                    >\\n                    </visualization-map>\\n                </div>\\n            </div>\\n         <!-- <button ng-click=\\\"self.getFittedModel()\\\">Test</button> -->\\n        </div>\\n    </div>\\n</div>\";\n\n//# sourceURL=webpack:///./training-prediction/newtemplate.html?");

/***/ })

/******/ });